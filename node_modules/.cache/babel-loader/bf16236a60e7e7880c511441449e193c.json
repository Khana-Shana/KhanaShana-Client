{"ast":null,"code":"import React, { Component } from 'react';\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\n  authDomain: \"khana-shana-2020.firebaseapp.com\",\n  databaseURL: \"https://khana-shana-2020.firebaseio.com\",\n  projectId: \"khana-shana-2020\",\n  storageBucket: \"khana-shana-2020.appspot.com\",\n  messagingSenderId: \"734527584801\",\n  appId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\n  measurementId: \"G-SC8N0VD5FC\"\n};\n\nclass firebase_integration extends Component {\n  constructor() {\n    super();\n\n    this.doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n    this.doSendEmailVerification = () => this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\n    });\n\n    firebase.initializeApp(firebaseConfig);\n    this.database = firebase.firestore();\n    this.storage = firebase.storage();\n    this.facebookProvider = new firebase.auth.FacebookAuthProvider().addScope('user_birthday').addScope('user_gender');\n    this.auth = firebase.auth();\n  }\n\n  getImageURL(divID, mainreferencefolder, path, imagename) {\n    console.log(\":(((((((((((((((((((((((((((((((((((((((((\");\n    this.storage.ref(mainreferencefolder).child(path + '/' + imagename).getDownloadURL().then(function (url) {\n      document.getElementById(divID).src = url;\n    });\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n    firebase_integration.database.collection(\"CustomerDatabase\").doc(firebase_integration.auth.currentUser.uid.toString()).get().then(snapshot => {\n      console.log(\"LOL\", snapshot.data());\n    });\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  async register(name, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    console.log(\"agay chala gya\");\n    this.auth.currentUser.sendEmailVerification();\n    return this.auth.currentUser.updateProfile({\n      displayName: name // email: email,\n      // password: password\n\n    });\n  }\n\n  passwordreset(email) {\n    return this.auth.sendPasswordResetEmail(email).then(function () {\n      alert(\"Email Sent!\");\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    // alert(this.auth.currentUser.displayName)\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  }\n\n  getDisplayName() {\n    var name = this.auth.currentUser.displayName;\n    console.log(name);\n    var nameArr = name.split(' ');\n    console.log(nameArr);\n    return nameArr[0];\n  }\n\n  addFeedback(CustomerID_par, Date_par, Rating_par, Subject_par, Message_par) {\n    this.database.collection('CustomerSupport').add({\n      CustomerID: CustomerID_par,\n      Date: Date_par,\n      Rating: Rating_par,\n      Subject: Subject_par,\n      Message: Message_par\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  }\n\n}\n\nexport default new firebase_integration();","map":{"version":3,"sources":["/media/muji/Local Disk/University/1902/Software_Engineering/SE Project/Development/KhanaShana-Client/src/components/fire.js"],"names":["React","Component","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase_integration","constructor","doSignInWithFacebook","auth","signInWithPopup","facebookProvider","doSendEmailVerification","currentUser","sendEmailVerification","url","process","env","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","initializeApp","database","firestore","storage","FacebookAuthProvider","addScope","getImageURL","divID","mainreferencefolder","path","imagename","console","log","ref","child","getDownloadURL","then","document","getElementById","src","login","email","password","signInWithEmailAndPassword","collection","doc","uid","toString","get","snapshot","data","logout","signOut","register","name","createUserWithEmailAndPassword","updateProfile","displayName","passwordreset","sendPasswordResetEmail","alert","catch","error","message","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getDisplayName","nameArr","split","addFeedback","CustomerID_par","Date_par","Rating_par","Subject_par","Message_par","add","CustomerID","Date","Rating","Subject","Message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\r\n  authDomain: \"khana-shana-2020.firebaseapp.com\",\r\n  databaseURL: \"https://khana-shana-2020.firebaseio.com\",\r\n  projectId: \"khana-shana-2020\",\r\n  storageBucket: \"khana-shana-2020.appspot.com\",\r\n  messagingSenderId: \"734527584801\",\r\n  appId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\r\n  measurementId: \"G-SC8N0VD5FC\"\r\n};\r\n\r\nclass firebase_integration extends Component {\r\n  constructor() {\r\n      super()\r\n      firebase.initializeApp(firebaseConfig);\r\n      this.database = firebase.firestore();\r\n      this.storage = firebase.storage();\r\n      this.facebookProvider = new firebase.auth.FacebookAuthProvider().addScope('user_birthday').addScope('user_gender');\r\n      this.auth = firebase.auth()\r\n  }\r\n\r\n  getImageURL(divID, mainreferencefolder, path, imagename) {\r\n      console.log(\":(((((((((((((((((((((((((((((((((((((((((\")\r\n    this.storage.ref(mainreferencefolder).child(path+'/'+imagename).getDownloadURL().then(function(url) {\r\n        document.getElementById(divID).src = url;\r\n    })\r\n  }\r\n\r\n  login(email, password) {\r\n    return this.auth.signInWithEmailAndPassword(email, password)\r\n    firebase_integration.database.collection(\"CustomerDatabase\").doc(firebase_integration.auth.currentUser.uid.toString()).get().then((snapshot)=>{\r\n        console.log(\"LOL\", snapshot.data())\r\n      })\r\n}\r\n\r\nlogout() {\r\n    return this.auth.signOut();\r\n}\r\n\r\nasync register(name, email, password) {\r\n    await this.auth.createUserWithEmailAndPassword(email, password)\r\n    console.log(\"agay chala gya\")\r\n    this.auth.currentUser.sendEmailVerification();\r\n    return this.auth.currentUser.updateProfile({\r\n        displayName: name,\r\n        // email: email,\r\n        // password: password\r\n    })\r\n}\r\n\r\npasswordreset(email) {\r\n    return this.auth.sendPasswordResetEmail(email).then(function () {\r\n        alert(\"Email Sent!\")\r\n    }).catch(function(error) {\r\n        alert(error.message)\r\n    });\r\n}\r\n\r\n\r\nisInitialized() {\r\n    return new Promise(resolve => {\r\n        this.auth.onAuthStateChanged(resolve)\r\n    })\r\n}\r\n\r\ndoSignInWithFacebook = () =>\r\n    this.auth.signInWithPopup(this.facebookProvider);\r\n\r\ngetCurrentUsername() {\r\n    // alert(this.auth.currentUser.displayName)\r\n    return this.auth.currentUser && this.auth.currentUser.displayName\r\n}\r\n\r\ngetDisplayName() {\r\n\r\n    var name = this.auth.currentUser.displayName;\r\n    console.log(name);\r\n    var nameArr = name.split(' ');\r\n    console.log(nameArr);\r\n    return nameArr[0];\r\n}\r\n\r\n\r\ndoSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n        url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\r\n    });\r\n\r\naddFeedback(CustomerID_par, Date_par, Rating_par, Subject_par, Message_par){\r\n    this.database.collection('CustomerSupport').add({\r\n        CustomerID: CustomerID_par,\r\n        Date: Date_par,\r\n        Rating: Rating_par,\r\n        Subject: Subject_par,\r\n        Message: Message_par\r\n    }).catch(function(error) {\r\n            alert(error.message)\r\n        });\r\n\t}\r\n}\r\n\r\nexport default new firebase_integration();"]},"metadata":{},"sourceType":"module"}