{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nconst config = {\n  apiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\n  authDomain: \"khana-shana-2020.firebaseapp.com\",\n  databaseURL: \"https://khana-shana-2020.firebaseio.com\",\n  projectId: \"khana-shana-2020\",\n  storageBucket: \"khana-shana-2020.appspot.com\",\n  messagingSenderId: \"734527584801\",\n  appId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\n  measurementId: \"G-SC8N0VD5FC\"\n};\n\nclass Firebase {\n  constructor() {\n    this.doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n    this.doSendEmailVerification = () => this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\n    });\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  async register(name, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    this.auth.currentUser.sendEmailVerification();\n    return this.auth.currentUser.updateProfile({\n      displayName: name // email: email,\n      // password: password\n\n    });\n  }\n\n  passwordreset() {\n    return this.auth.sendPasswordResetEmail(this.auth.currentUser.email).then(function () {\n      alert(\"Email Sent!\");\n    }).catch(function (error) {// An error happened.\n    });\n  } // addQuote(quote) {\n  // \tif(!this.auth.currentUser) {\n  // \t\treturn alert('Not authorized')\n  // \t}\n  // \treturn this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).set({\n  // \t\tquote\n  // \t})\n  // }\n\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    // alert(this.auth.currentUser.displayName)\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  } // async getCurrentUserQuote() {\n  // \tconst quote = await this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).get()\n  // \treturn quote.get('quote')\n  // }\n\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/src/components/fire.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","doSignInWithFacebook","auth","signInWithPopup","facebookProvider","doSendEmailVerification","currentUser","sendEmailVerification","url","process","env","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","initializeApp","db","firestore","FacebookAuthProvider","login","email","password","signInWithEmailAndPassword","logout","signOut","register","name","createUserWithEmailAndPassword","updateProfile","displayName","passwordreset","sendPasswordResetEmail","then","alert","catch","error","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,kCAFE;AAGdC,EAAAA,WAAW,EAAE,yCAHC;AAIdC,EAAAA,SAAS,EAAE,kBAJG;AAKdC,EAAAA,aAAa,EAAE,8BALD;AAMdC,EAAAA,iBAAiB,EAAE,cANL;AAOdC,EAAAA,KAAK,EAAE,2CAPO;AAQdC,EAAAA,aAAa,EAAE;AARD,CAAf;;AAWE,MAAMC,QAAN,CAAe;AAChBC,EAAAA,WAAW,GAAG;AAAA,SAiDdC,oBAjDc,GAiDS,MACvB,KAAKC,IAAL,CAAUC,eAAV,CAA0B,KAAKC,gBAA/B,CAlDc;;AAAA,SA+DdC,uBA/Dc,GA+DY,MACvB,KAAKH,IAAL,CAAUI,WAAV,CAAsBC,qBAAtB,CAA4C;AAC1CC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADyB,KAA5C,CAhEW;;AACbtB,IAAAA,GAAG,CAACuB,aAAJ,CAAkBtB,MAAlB;AACA,SAAKY,IAAL,GAAYb,GAAG,CAACa,IAAJ,EAAZ;AACA,SAAKW,EAAL,GAAUxB,GAAG,CAACyB,SAAJ,EAAV;AACA,SAAKV,gBAAL,GAAwB,IAAIf,GAAG,CAACa,IAAJ,CAASa,oBAAb,EAAxB;AACA;;AAEDC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACtB,WAAO,KAAKhB,IAAL,CAAUiB,0BAAV,CAAqCF,KAArC,EAA4CC,QAA5C,CAAP;AACA;;AAEDE,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKlB,IAAL,CAAUmB,OAAV,EAAP;AACA;;AAED,QAAMC,QAAN,CAAeC,IAAf,EAAqBN,KAArB,EAA4BC,QAA5B,EAAsC;AACrC,UAAM,KAAKhB,IAAL,CAAUsB,8BAAV,CAAyCP,KAAzC,EAAgDC,QAAhD,CAAN;AACA,SAAKhB,IAAL,CAAUI,WAAV,CAAsBC,qBAAtB;AACA,WAAO,KAAKL,IAAL,CAAUI,WAAV,CAAsBmB,aAAtB,CAAoC;AAC1CC,MAAAA,WAAW,EAAEH,IAD6B,CAE1C;AACA;;AAH0C,KAApC,CAAP;AAKA;;AAEDI,EAAAA,aAAa,GAAE;AACd,WAAO,KAAKzB,IAAL,CAAU0B,sBAAV,CAAiC,KAAK1B,IAAL,CAAUI,WAAV,CAAsBW,KAAvD,EAA8DY,IAA9D,CAAmE,YAAW;AACpFC,MAAAA,KAAK,CAAC,aAAD,CAAL;AACE,KAFI,EAEFC,KAFE,CAEI,UAASC,KAAT,EAAgB,CAC1B;AACE,KAJI,CAAP;AAKA,GAhCe,CAkChB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAC,EAAAA,aAAa,GAAG;AACf,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC7B,WAAKjC,IAAL,CAAUkC,kBAAV,CAA6BD,OAA7B;AACA,KAFM,CAAP;AAGA;;AAKDE,EAAAA,kBAAkB,GAAG;AACpB;AACA,WAAO,KAAKnC,IAAL,CAAUI,WAAV,IAAyB,KAAKJ,IAAL,CAAUI,WAAV,CAAsBoB,WAAtD;AACA,GAxDe,CA0DhB;AACA;AACA;AACA;;;AA7DgB;;AAsEjB,eAAe,IAAI3B,QAAJ,EAAf","sourcesContent":["import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firebase-firestore';\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\r\n\tauthDomain: \"khana-shana-2020.firebaseapp.com\",\r\n\tdatabaseURL: \"https://khana-shana-2020.firebaseio.com\",\r\n\tprojectId: \"khana-shana-2020\",\r\n\tstorageBucket: \"khana-shana-2020.appspot.com\",\r\n\tmessagingSenderId: \"734527584801\",\r\n\tappId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\r\n\tmeasurementId: \"G-SC8N0VD5FC\"\r\n  };\r\n\r\n  class Firebase {\r\n\tconstructor() {\r\n\t\tapp.initializeApp(config)\r\n\t\tthis.auth = app.auth()\r\n\t\tthis.db = app.firestore()\r\n\t\tthis.facebookProvider = new app.auth.FacebookAuthProvider();\r\n\t}\r\n\r\n\tlogin(email, password) {\r\n\t\treturn this.auth.signInWithEmailAndPassword(email, password)\r\n\t}\r\n\r\n\tlogout() {\r\n\t\treturn this.auth.signOut()\r\n\t}\r\n\r\n\tasync register(name, email, password) {\r\n\t\tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n\t\tthis.auth.currentUser.sendEmailVerification();\r\n\t\treturn this.auth.currentUser.updateProfile({\r\n\t\t\tdisplayName: name,\r\n\t\t\t// email: email,\r\n\t\t\t// password: password\r\n\t\t})\r\n\t}\r\n\r\n\tpasswordreset(){\r\n\t\treturn this.auth.sendPasswordResetEmail(this.auth.currentUser.email).then(function() {\r\n\t\t\talert(\"Email Sent!\")\r\n\t\t  }).catch(function(error) {\r\n\t\t\t// An error happened.\r\n\t\t  });\r\n\t}\r\n\r\n\t// addQuote(quote) {\r\n\t// \tif(!this.auth.currentUser) {\r\n\t// \t\treturn alert('Not authorized')\r\n\t// \t}\r\n\r\n\t// \treturn this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).set({\r\n\t// \t\tquote\r\n\t// \t})\r\n\t// }\r\n\r\n\tisInitialized() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.auth.onAuthStateChanged(resolve)\r\n\t\t})\r\n\t}\r\n\r\n\tdoSignInWithFacebook = () =>\r\n\tthis.auth.signInWithPopup(this.facebookProvider);\r\n\t\r\n\tgetCurrentUsername() {\r\n\t\t// alert(this.auth.currentUser.displayName)\r\n\t\treturn this.auth.currentUser && this.auth.currentUser.displayName\r\n\t}\r\n\r\n\t// async getCurrentUserQuote() {\r\n\t// \tconst quote = await this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).get()\r\n\t// \treturn quote.get('quote')\r\n\t// }\r\n\r\n\t\r\n\tdoSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\r\n    });\r\n}\r\n\r\nexport default new Firebase();"]},"metadata":{},"sourceType":"module"}