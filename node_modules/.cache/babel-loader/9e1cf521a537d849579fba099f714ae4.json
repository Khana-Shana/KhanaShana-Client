{"ast":null,"code":"import { ADD_PRODUCT_BASKET, GET_NUMBERS_BASKET, INCREASE_QUANTITY, DECREASE_QUANTITY, CLEAR_PRODUCT } from \"../actions/types\";\nconst initialState = {\n  basketNumbers: 0,\n  cartCost: 0,\n  products: {\n    pasta: {\n      key: \"pasta\",\n      name: \"Pasta\",\n      price: 550,\n      numbers: 0,\n      inCart: false,\n      preptime: \"30 mins\",\n      image: \"./images/pasta.jpg\"\n    },\n    spaghetti: {\n      key: \"spaghetti\",\n      name: \"Spaghetti\",\n      price: 150,\n      numbers: 0,\n      inCart: false,\n      image: \"./images/spaghetti.jpg\"\n    },\n    chowmein: {\n      key: \"chowmein\",\n      name: \"Chowmein\",\n      price: 350,\n      numbers: 0,\n      inCart: false,\n      image: \"./images/chowmein.jpg\"\n    },\n    gobhi: {\n      key: \"gobhi\",\n      name: \"Gobhi\",\n      price: 450,\n      numbers: 0,\n      inCart: false,\n      image: \"./images/gobhi.jpg\"\n    },\n    cake: {\n      key: \"cake\",\n      name: \"Cake\",\n      price: 200,\n      numbers: 0,\n      inCart: false,\n      image: \"./images/cake.jpg\"\n    },\n    burger: {\n      key: \"burger\",\n      name: \"Burger\",\n      price: 300,\n      numbers: 0,\n      inCart: false,\n      image: \"./images/burger.jpg\"\n    },\n    steak: {\n      key: \"steak\",\n      name: \"Steak\",\n      price: 750,\n      numbers: 0,\n      inCart: false,\n      image: \"./images/steak.jpg\"\n    },\n    halwa: {\n      key: \"halwa\",\n      name: \"Halwa\",\n      price: 200,\n      numbers: 0,\n      inCart: false,\n      image: \"./images/pasta.jpg\"\n    }\n  }\n};\nexport default ((state = initialState, action) => {\n  let productSelected = \"\";\n\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      productSelected = { ...state.products[action.payload]\n      };\n      console.log(productSelected);\n      productSelected.numbers += 1;\n      productSelected.inCart = true;\n      return { ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + state.products[action.payload].price,\n        products: { ...state.products,\n          [action.payload]: productSelected\n        }\n      };\n\n    case GET_NUMBERS_BASKET:\n      return { ...state\n      };\n\n    case INCREASE_QUANTITY:\n      productSelected = { ...state.products[action.payload]\n      };\n      productSelected.numbers += 1;\n      return { ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + state.products[action.payload].price,\n        products: { ...state.products,\n          [action.payload]: productSelected\n        }\n      };\n\n    case DECREASE_QUANTITY:\n      productSelected = { ...state.products[action.payload]\n      };\n      let newCartCost = 0;\n      let newBasketNumbers = 0;\n\n      if (productSelected.numbers === 0) {\n        productSelected.numbers = 0;\n        newCartCost = state.cartCost;\n        newBasketNumbers = state.basketNumbers;\n      } else {\n        productSelected.numbers -= 1;\n        newCartCost = state.cartCost - state.products[action.payload].price;\n        newBasketNumbers = state.basketNumbers - 1;\n      }\n\n      return { ...state,\n        basketNumbers: newBasketNumbers,\n        cartCost: newCartCost,\n        products: { ...state.products,\n          [action.payload]: productSelected\n        }\n      };\n\n    case CLEAR_PRODUCT:\n      productSelected = { ...state.products[action.payload]\n      };\n      let numbersBackup = productSelected.numbers;\n      productSelected.numbers = 0;\n      productSelected.inCart = false;\n      return { ...state,\n        basketNumbers: state.basketNumbers - numbersBackup,\n        cartCost: state.cartCost - numbersBackup * productSelected.price,\n        products: { ...state.products,\n          [action.payload]: productSelected\n        }\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/KhanaShana-Client/src/components/reducers/basketReducer.jsx"],"names":["ADD_PRODUCT_BASKET","GET_NUMBERS_BASKET","INCREASE_QUANTITY","DECREASE_QUANTITY","CLEAR_PRODUCT","initialState","basketNumbers","cartCost","products","pasta","key","name","price","numbers","inCart","preptime","image","spaghetti","chowmein","gobhi","cake","burger","steak","halwa","state","action","productSelected","type","payload","console","log","newCartCost","newBasketNumbers","numbersBackup"],"mappings":"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","sourcesContent":["import { ADD_PRODUCT_BASKET, GET_NUMBERS_BASKET, INCREASE_QUANTITY, DECREASE_QUANTITY,CLEAR_PRODUCT } from \"../actions/types\";\n\nconst initialState = {\n    basketNumbers: 0,\n    cartCost: 0,\n    products: {\n\n        pasta: {\n            key: \"pasta\",\n            name: \"Pasta\",\n            price: 550,\n            numbers: 0,\n            inCart: false,\n            preptime: \"30 mins\",\n            image: \"./images/pasta.jpg\"\n        },\n        spaghetti: {\n            key: \"spaghetti\",\n            name: \"Spaghetti\",\n            price: 150,\n            numbers: 0,\n            inCart: false,\n            image: \"./images/spaghetti.jpg\"\n        },\n        chowmein: {\n            key: \"chowmein\",\n            name: \"Chowmein\",\n            price: 350,\n            numbers: 0,\n            inCart: false,\n            image: \"./images/chowmein.jpg\"\n        },\n        gobhi: {\n            key: \"gobhi\",\n            name: \"Gobhi\",\n            price: 450,\n            numbers: 0,\n            inCart: false,\n            image: \"./images/gobhi.jpg\"\n        },\n        cake: {\n            key: \"cake\",\n            name: \"Cake\",\n            price: 200,\n            numbers: 0,\n            inCart: false,\n            image: \"./images/cake.jpg\"\n        },\n        burger: {\n            key: \"burger\",\n            name: \"Burger\",\n            price: 300,\n            numbers: 0,\n            inCart: false,\n            image: \"./images/burger.jpg\"\n        },\n        steak: {\n            key: \"steak\",\n            name: \"Steak\",\n            price: 750,\n            numbers: 0,\n            inCart: false,\n            image: \"./images/steak.jpg\"\n        },\n        halwa: {\n            key: \"halwa\",\n            name: \"Halwa\",\n            price: 200,\n            numbers: 0,\n            inCart: false,\n            image: \"./images/pasta.jpg\"\n        }\n    }\n}\n\nexport default (state=initialState,action) => {\n    let productSelected = \"\";\n    switch(action.type) {\n        case ADD_PRODUCT_BASKET:\n\n            productSelected = {...state.products[action.payload]};\n            console.log(productSelected);\n            productSelected.numbers += 1;\n            productSelected.inCart = true;\n\n            return {\n                ...state,\n                basketNumbers: state.basketNumbers + 1,\n                cartCost: state.cartCost + state.products[action.payload].price,\n                products: {\n                    ...state.products,\n                    [action.payload]: productSelected\n                }\n            }\n        case GET_NUMBERS_BASKET:\n            return {\n                ...state\n            }\n        case INCREASE_QUANTITY:\n            productSelected = {...state.products[action.payload]};\n            productSelected.numbers += 1;\n            return {\n                ...state,\n                basketNumbers: state.basketNumbers + 1,\n                cartCost: state.cartCost + state.products[action.payload].price,\n                products: {\n                    ...state.products,\n                    [action.payload] : productSelected\n                }\n            }\n        case DECREASE_QUANTITY:\n            productSelected = {...state.products[action.payload]};\n            let newCartCost = 0;\n            let newBasketNumbers = 0;\n            if(productSelected.numbers === 0){\n                productSelected.numbers = 0;\n                newCartCost = state.cartCost;\n                newBasketNumbers = state.basketNumbers;\n\n            } else {\n                productSelected.numbers -= 1;\n                newCartCost = state.cartCost - state.products[action.payload].price;\n                newBasketNumbers = state.basketNumbers - 1;\n            }\n            return {\n                ...state,\n                basketNumbers: newBasketNumbers,\n                cartCost: newCartCost,\n                products: {\n                    ...state.products,\n                    [action.payload] : productSelected\n                }\n            }\n        case CLEAR_PRODUCT:\n            productSelected = {...state.products[action.payload]};\n            let numbersBackup = productSelected.numbers;\n            productSelected.numbers = 0;\n            productSelected.inCart = false;\n            return{\n                ...state,\n                basketNumbers: state.basketNumbers - numbersBackup,\n                cartCost: state.cartCost - (numbersBackup*productSelected.price),\n                products: {\n                    ...state.products,\n                    [action.payload]: productSelected\n                }                \n            }\n\n        default: \n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}