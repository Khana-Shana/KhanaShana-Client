{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = undefined;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _types = require('./types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar DEFAULT_HEIGHT = exports.DEFAULT_HEIGHT = 30;\nvar DEFAULT_WIDTH = exports.DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\n\nvar CellMeasurerCache = function () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck3.default)(this, CellMeasurerCache);\n    this._cellHeightCache = {};\n    this._cellWidthCache = {};\n    this._columnWidthCache = {};\n    this._rowHeightCache = {};\n    this._columnCount = 0;\n    this._rowCount = 0;\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache.hasOwnProperty(key) ? _this._columnWidthCache[key] : _this._defaultWidth;\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache.hasOwnProperty(key) ? _this._rowHeightCache[key] : _this._defaultHeight;\n    };\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass3.default)(CellMeasurerCache, [{\n    key: 'clear',\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache.hasOwnProperty(_key) ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache.hasOwnProperty(_key2) ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache.hasOwnProperty(key);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: '_updateCachedColumnAndRowSizes',\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports.default = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return rowIndex + '-' + columnIndex;\n}","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js"],"names":["Object","defineProperty","exports","value","DEFAULT_WIDTH","DEFAULT_HEIGHT","undefined","_classCallCheck2","require","_classCallCheck3","_interopRequireDefault","_createClass2","_createClass3","_types","obj","__esModule","default","CellMeasurerCache","_this","params","arguments","length","_cellHeightCache","_cellWidthCache","_columnWidthCache","_rowHeightCache","_columnCount","_rowCount","columnWidth","_ref","index","key","_keyMapper","hasOwnProperty","_defaultWidth","rowHeight","_ref2","_defaultHeight","defaultHeight","defaultWidth","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","Math","max","process","env","NODE_ENV","console","warn","clear","rowIndex","columnIndex","_updateCachedColumnAndRowSizes","clearAll","hasFixedHeight","hasFixedWidth","getHeight","_key","getWidth","_key2","has","set","width","height","i","columnKey","_i","rowKey","get"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = undefined;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _types = require('./types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_HEIGHT = exports.DEFAULT_HEIGHT = 30;\n\nvar DEFAULT_WIDTH = exports.DEFAULT_WIDTH = 100;\n\n// Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache = function () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck3.default)(this, CellMeasurerCache);\n    this._cellHeightCache = {};\n    this._cellWidthCache = {};\n    this._columnWidthCache = {};\n    this._rowHeightCache = {};\n    this._columnCount = 0;\n    this._rowCount = 0;\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache.hasOwnProperty(key) ? _this._columnWidthCache[key] : _this._defaultWidth;\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache.hasOwnProperty(key) ? _this._rowHeightCache[key] : _this._defaultHeight;\n    };\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n\n\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass3.default)(CellMeasurerCache, [{\n    key: 'clear',\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache.hasOwnProperty(_key) ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache.hasOwnProperty(_key2) ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache.hasOwnProperty(key);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      }\n\n      // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: '_updateCachedColumnAndRowSizes',\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n        var columnKey = this._keyMapper(0, columnIndex);\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n        var rowKey = this._keyMapper(rowIndex, 0);\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports.default = CellMeasurerCache;\n\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return rowIndex + '-' + columnIndex;\n}"]},"metadata":{},"sourceType":"script"}