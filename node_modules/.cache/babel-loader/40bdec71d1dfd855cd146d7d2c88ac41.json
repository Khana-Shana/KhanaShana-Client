{"ast":null,"code":"// import app from 'firebase/app';\n// import firebase from 'firebase';\n// import 'firebase/auth';\n// import 'firebase/firebase-firestore';\n// import { Component } from 'react';\n// var config = {\n// \tapiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\n// \tauthDomain: \"khana-shana-2020.firebaseapp.com\",\n// \tdatabaseURL: \"https://khana-shana-2020.firebaseio.com\",\n// \tprojectId: \"khana-shana-2020\",\n// \tstorageBucket: \"khana-shana-2020.appspot.com\",\n// \tmessagingSenderId: \"734527584801\",\n// \tappId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\n// \tmeasurementId: \"G-SC8N0VD5FC\"\n// };\n// class firebase_integration extends Component{\n// \tconstructor() {\n// \t\tsuper()\n// \t\tfirebase.initializeApp(config);\n// \t\tthis.auth = firebase.auth()\n// \t\tthis.db = firebase.firestore()\n// \t\tthis.storage = firebase.storage();\n// \t\tthis.facebookProvider = new firebase.auth.FacebookAuthProvider();\n// \t}\n// \tlogin(email, password) {\n// \t\treturn this.auth.signInWithEmailAndPassword(email, password)\n// \t}\n// \tlogout() {\n// \t\treturn this.auth.signOut();\n// \t}\n// \tasync register(name, email, password) {\n// \t\tawait this.auth.createUserWithEmailAndPassword(email, password)\n// \t\tthis.auth.currentUser.sendEmailVerification();\n// \t\treturn this.auth.currentUser.updateProfile({\n// \t\t\tdisplayName: name,\n// \t\t\t// email: email,\n// \t\t\t// password: password\n// \t\t})\n// \t}\n// \tpasswordreset() {\n// \t\treturn this.auth.sendPasswordResetEmail(this.auth.currentUser.email).then(function () {\n// \t\t\talert(\"Email Sent!\")\n// \t\t}).catch(function (error) {\n// \t\t\t// An error happened.\n// \t\t});\n// \t}\n// \t// addQuote(quote) {\n// \t// \tif(!this.auth.currentUser) {\n// \t// \t\treturn alert('Not authorized')\n// \t// \t}\n// \t// \treturn this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).set({\n// \t// \t\tquote\n// \t// \t})\n// \t// }\n// \tisInitialized() {\n// \t\treturn new Promise(resolve => {\n// \t\t\tthis.auth.onAuthStateChanged(resolve)\n// \t\t})\n// \t}\n// \tdoSignInWithFacebook = () =>\n// \t\tthis.auth.signInWithPopup(this.facebookProvider);\n// \tgetCurrentUsername() {\n// \t\t// alert(this.auth.currentUser.displayName)\n// \t\treturn this.auth.currentUser && this.auth.currentUser.displayName\n// \t}\n// \tgetDisplayName() {\n// \t\tvar name = this.auth.currentUser.displayName;\n// \t\tconsole.log(name);\n// \t\tvar nameArr = name.split(' ');\n// \t\tconsole.log(nameArr);\n// \t\treturn nameArr[0];\n// \t}\n// \tgetImageURL(divID, mainreferencefolder, path, imagename) {\n// \t\tthis.storage.ref(mainreferencefolder).child(path+'/'+imagename).getDownloadURL().then(function(url) {\n// \t\t  document.getElementById(divID).src = url;\n// \t\t});\n// \t}\n// \t// async getCurrentUserQuote() {\n// \t// \tconst quote = await this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).get()\n// \t// \treturn quote.get('quote')\n// \t// }\n// \tdoSendEmailVerification = () =>\n// \t\tthis.auth.currentUser.sendEmailVerification({\n// \t\t\turl: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n// \t\t});\n// }\n// export default new firebase_integration();\n// FOR FIREBASE INTEGRATION ADD THESE TWO LINES AT THE END OF THE BODY\n//  <script src=\"https://www.gstatic.com/firebasejs/${JSCORE_VERSION}/firebase.js\"></script>\n// <script src=\"https://www.gstatic.com/firebasejs/7.14.1/firebase-app.js\"></script>\n// <script src=\"https://www.gstatic.com/firebasejs/7.14.1/firebase-database.js\"></script>\n// <script src=\"https://www.gstatic.com/firebasejs/7.14.1/firebase-firestore.js\"></script>\n// ADD THIS LINE AFTER CHANGING IN ANY FILE USING THE CLASS FROM THIS JS FILE\n// npm install --save firebase\n// import firebase_integration from '../Fire.js'\n// change the directory according to your need\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\n  authDomain: \"khana-shana-2020.firebaseapp.com\",\n  databaseURL: \"https://khana-shana-2020.firebaseio.com\",\n  projectId: \"khana-shana-2020\",\n  storageBucket: \"khana-shana-2020.appspot.com\",\n  messagingSenderId: \"734527584801\",\n  appId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\n  measurementId: \"G-SC8N0VD5FC\"\n};\n\nclass firebase_integration extends Component {\n  constructor() {\n    super();\n    firebase.initializeApp(firebaseConfig);\n    this.database = firebase.firestore();\n    this.storage = firebase.storage();\n  }\n\n  getImageURL(divID, mainreferencefolder, path, imagename) {\n    this.storage.ref(mainreferencefolder).child(path + '/' + imagename).getDownloadURL().then(function (url) {\n      document.getElementById(divID).src = url;\n    });\n  }\n\n}\n\nexport default new firebase_integration();","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/src/components/fire.js"],"names":["React","Component","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase_integration","constructor","initializeApp","database","firestore","storage","getImageURL","divID","mainreferencefolder","path","imagename","ref","child","getDownloadURL","then","url","document","getElementById","src"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,kCAFO;AAGnBC,EAAAA,WAAW,EAAE,yCAHM;AAInBC,EAAAA,SAAS,EAAE,kBAJQ;AAKnBC,EAAAA,aAAa,EAAE,8BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB;;AAWA,MAAMC,oBAAN,SAAmCX,SAAnC,CAA6C;AAC3CY,EAAAA,WAAW,GAAG;AACV;AACAX,IAAAA,QAAQ,CAACY,aAAT,CAAuBX,cAAvB;AACA,SAAKY,QAAL,GAAgBb,QAAQ,CAACc,SAAT,EAAhB;AACA,SAAKC,OAAL,GAAef,QAAQ,CAACe,OAAT,EAAf;AACH;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,mBAAR,EAA6BC,IAA7B,EAAmCC,SAAnC,EAA8C;AACvD,SAAKL,OAAL,CAAaM,GAAb,CAAiBH,mBAAjB,EAAsCI,KAAtC,CAA4CH,IAAI,GAAC,GAAL,GAASC,SAArD,EAAgEG,cAAhE,GAAiFC,IAAjF,CAAsF,UAASC,GAAT,EAAc;AAClGC,MAAAA,QAAQ,CAACC,cAAT,CAAwBV,KAAxB,EAA+BW,GAA/B,GAAqCH,GAArC;AACD,KAFD;AAGD;;AAZ0C;;AAe7C,eAAe,IAAIf,oBAAJ,EAAf","sourcesContent":["// import app from 'firebase/app';\r\n// import firebase from 'firebase';\r\n// import 'firebase/auth';\r\n// import 'firebase/firebase-firestore';\r\n// import { Component } from 'react';\r\n\r\n// var config = {\r\n// \tapiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\r\n// \tauthDomain: \"khana-shana-2020.firebaseapp.com\",\r\n// \tdatabaseURL: \"https://khana-shana-2020.firebaseio.com\",\r\n// \tprojectId: \"khana-shana-2020\",\r\n// \tstorageBucket: \"khana-shana-2020.appspot.com\",\r\n// \tmessagingSenderId: \"734527584801\",\r\n// \tappId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\r\n// \tmeasurementId: \"G-SC8N0VD5FC\"\r\n// };\r\n\r\n// class firebase_integration extends Component{\r\n// \tconstructor() {\r\n// \t\tsuper()\r\n// \t\tfirebase.initializeApp(config);\r\n// \t\tthis.auth = firebase.auth()\r\n// \t\tthis.db = firebase.firestore()\r\n// \t\tthis.storage = firebase.storage();\r\n// \t\tthis.facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n// \t}\r\n\r\n// \tlogin(email, password) {\r\n// \t\treturn this.auth.signInWithEmailAndPassword(email, password)\r\n// \t}\r\n\r\n// \tlogout() {\r\n// \t\treturn this.auth.signOut();\r\n// \t}\r\n\r\n// \tasync register(name, email, password) {\r\n// \t\tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n// \t\tthis.auth.currentUser.sendEmailVerification();\r\n// \t\treturn this.auth.currentUser.updateProfile({\r\n// \t\t\tdisplayName: name,\r\n// \t\t\t// email: email,\r\n// \t\t\t// password: password\r\n// \t\t})\r\n// \t}\r\n\r\n// \tpasswordreset() {\r\n// \t\treturn this.auth.sendPasswordResetEmail(this.auth.currentUser.email).then(function () {\r\n// \t\t\talert(\"Email Sent!\")\r\n// \t\t}).catch(function (error) {\r\n// \t\t\t// An error happened.\r\n// \t\t});\r\n// \t}\r\n\r\n// \t// addQuote(quote) {\r\n// \t// \tif(!this.auth.currentUser) {\r\n// \t// \t\treturn alert('Not authorized')\r\n// \t// \t}\r\n\r\n// \t// \treturn this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).set({\r\n// \t// \t\tquote\r\n// \t// \t})\r\n// \t// }\r\n\r\n// \tisInitialized() {\r\n// \t\treturn new Promise(resolve => {\r\n// \t\t\tthis.auth.onAuthStateChanged(resolve)\r\n// \t\t})\r\n// \t}\r\n\r\n// \tdoSignInWithFacebook = () =>\r\n// \t\tthis.auth.signInWithPopup(this.facebookProvider);\r\n\r\n// \tgetCurrentUsername() {\r\n// \t\t// alert(this.auth.currentUser.displayName)\r\n// \t\treturn this.auth.currentUser && this.auth.currentUser.displayName\r\n// \t}\r\n\r\n// \tgetDisplayName() {\r\n\r\n// \t\tvar name = this.auth.currentUser.displayName;\r\n// \t\tconsole.log(name);\r\n// \t\tvar nameArr = name.split(' ');\r\n// \t\tconsole.log(nameArr);\r\n// \t\treturn nameArr[0];\r\n// \t}\r\n\r\n// \tgetImageURL(divID, mainreferencefolder, path, imagename) {\r\n// \t\tthis.storage.ref(mainreferencefolder).child(path+'/'+imagename).getDownloadURL().then(function(url) {\r\n// \t\t  document.getElementById(divID).src = url;\r\n// \t\t});\r\n// \t}\r\n\r\n\r\n\r\n// \t// async getCurrentUserQuote() {\r\n// \t// \tconst quote = await this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).get()\r\n// \t// \treturn quote.get('quote')\r\n// \t// }\r\n\r\n\r\n// \tdoSendEmailVerification = () =>\r\n// \t\tthis.auth.currentUser.sendEmailVerification({\r\n// \t\t\turl: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\r\n// \t\t});\r\n// }\r\n\r\n// export default new firebase_integration();\r\n\r\n\r\n// FOR FIREBASE INTEGRATION ADD THESE TWO LINES AT THE END OF THE BODY\r\n//  <script src=\"https://www.gstatic.com/firebasejs/${JSCORE_VERSION}/firebase.js\"></script>\r\n// <script src=\"https://www.gstatic.com/firebasejs/7.14.1/firebase-app.js\"></script>\r\n// <script src=\"https://www.gstatic.com/firebasejs/7.14.1/firebase-database.js\"></script>\r\n// <script src=\"https://www.gstatic.com/firebasejs/7.14.1/firebase-firestore.js\"></script>\r\n\r\n// ADD THIS LINE AFTER CHANGING IN ANY FILE USING THE CLASS FROM THIS JS FILE\r\n// npm install --save firebase\r\n// import firebase_integration from '../Fire.js'\r\n// change the directory according to your need\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\r\n  authDomain: \"khana-shana-2020.firebaseapp.com\",\r\n  databaseURL: \"https://khana-shana-2020.firebaseio.com\",\r\n  projectId: \"khana-shana-2020\",\r\n  storageBucket: \"khana-shana-2020.appspot.com\",\r\n  messagingSenderId: \"734527584801\",\r\n  appId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\r\n  measurementId: \"G-SC8N0VD5FC\"\r\n};\r\n\r\nclass firebase_integration extends Component {\r\n  constructor() {\r\n      super()\r\n      firebase.initializeApp(firebaseConfig);\r\n      this.database = firebase.firestore();\r\n      this.storage = firebase.storage();\r\n  }\r\n\r\n  getImageURL(divID, mainreferencefolder, path, imagename) {\r\n    this.storage.ref(mainreferencefolder).child(path+'/'+imagename).getDownloadURL().then(function(url) {\r\n      document.getElementById(divID).src = url;\r\n    });\r\n  }\r\n}\r\n\r\nexport default new firebase_integration();"]},"metadata":{},"sourceType":"module"}