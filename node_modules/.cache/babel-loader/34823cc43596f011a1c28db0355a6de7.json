{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _clone2 = require('lodash/clone');\n\nvar _clone3 = _interopRequireDefault(_clone2);\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nexports.default = filterNodesOfTree;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction filterNodesOfTree(data, check) {\n  var findNodes = function findNodes() {\n    var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var nextNodes = [];\n\n    for (var i = 0; i < nodes.length; i += 1) {\n      if ((0, _isArray3.default)(nodes[i].children)) {\n        var nextChildren = findNodes(nodes[i].children);\n\n        if (nextChildren.length) {\n          var item = (0, _clone3.default)(nodes[i]);\n          item.children = nextChildren;\n          nextNodes.push(item);\n          continue;\n        }\n      }\n\n      if (check(nodes[i])) {\n        nextNodes.push(nodes[i]);\n      }\n    }\n\n    return nextNodes;\n  };\n\n  return findNodes(data);\n}","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/node_modules/rsuite-utils/lib/utils/filterNodesOfTree.js"],"names":["Object","defineProperty","exports","value","_clone2","require","_clone3","_interopRequireDefault","_isArray2","_isArray3","default","filterNodesOfTree","obj","__esModule","data","check","findNodes","nodes","arguments","length","undefined","nextNodes","i","children","nextChildren","item","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,OAAD,CAApC;;AAEA,IAAII,SAAS,GAAGH,OAAO,CAAC,gBAAD,CAAvB;;AAEA,IAAII,SAAS,GAAGF,sBAAsB,CAACC,SAAD,CAAtC;;AAEAN,OAAO,CAACQ,OAAR,GAAkBC,iBAAlB;;AAEA,SAASJ,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEF,IAAAA,OAAO,EAAEE;AAAX,GAArC;AAAwD;;AAE/F,SAASD,iBAAT,CAA2BG,IAA3B,EAAiCC,KAAjC,EAAwC;AACtC,MAAIC,SAAS,GAAG,SAASA,SAAT,GAAqB;AACnC,QAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AAEA,QAAIG,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACE,MAA1B,EAAkCG,CAAC,IAAI,CAAvC,EAA0C;AACxC,UAAI,CAAC,GAAGb,SAAS,CAACC,OAAd,EAAuBO,KAAK,CAACK,CAAD,CAAL,CAASC,QAAhC,CAAJ,EAA+C;AAC7C,YAAIC,YAAY,GAAGR,SAAS,CAACC,KAAK,CAACK,CAAD,CAAL,CAASC,QAAV,CAA5B;;AACA,YAAIC,YAAY,CAACL,MAAjB,EAAyB;AACvB,cAAIM,IAAI,GAAG,CAAC,GAAGnB,OAAO,CAACI,OAAZ,EAAqBO,KAAK,CAACK,CAAD,CAA1B,CAAX;AACAG,UAAAA,IAAI,CAACF,QAAL,GAAgBC,YAAhB;AACAH,UAAAA,SAAS,CAACK,IAAV,CAAeD,IAAf;AACA;AACD;AACF;;AAED,UAAIV,KAAK,CAACE,KAAK,CAACK,CAAD,CAAN,CAAT,EAAqB;AACnBD,QAAAA,SAAS,CAACK,IAAV,CAAeT,KAAK,CAACK,CAAD,CAApB;AACD;AACF;;AAED,WAAOD,SAAP;AACD,GArBD;;AAuBA,SAAOL,SAAS,CAACF,IAAD,CAAhB;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _clone2 = require('lodash/clone');\n\nvar _clone3 = _interopRequireDefault(_clone2);\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nexports.default = filterNodesOfTree;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction filterNodesOfTree(data, check) {\n  var findNodes = function findNodes() {\n    var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var nextNodes = [];\n    for (var i = 0; i < nodes.length; i += 1) {\n      if ((0, _isArray3.default)(nodes[i].children)) {\n        var nextChildren = findNodes(nodes[i].children);\n        if (nextChildren.length) {\n          var item = (0, _clone3.default)(nodes[i]);\n          item.children = nextChildren;\n          nextNodes.push(item);\n          continue;\n        }\n      }\n\n      if (check(nodes[i])) {\n        nextNodes.push(nodes[i]);\n      }\n    }\n\n    return nextNodes;\n  };\n\n  return findNodes(data);\n}"]},"metadata":{},"sourceType":"script"}