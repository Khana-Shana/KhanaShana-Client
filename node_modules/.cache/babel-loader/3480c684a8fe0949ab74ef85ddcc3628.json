{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { placements } from './popper';\nimport usePopper, { toModifierMap } from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './utils/useWaitForDOMRef';\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\n\nvar Overlay = React.forwardRef(function (props, outerRef) {\n  var _modifiers$preventOve, _modifiers$arrow;\n\n  var flip = props.flip,\n      placement = props.placement,\n      containerPadding = props.containerPadding,\n      _props$popperConfig = props.popperConfig,\n      popperConfig = _props$popperConfig === void 0 ? {} : _props$popperConfig,\n      Transition = props.transition;\n\n  var _useCallbackRef = useCallbackRef(),\n      rootElement = _useCallbackRef[0],\n      attachRef = _useCallbackRef[1];\n\n  var _useCallbackRef2 = useCallbackRef(),\n      arrowElement = _useCallbackRef2[0],\n      attachArrowRef = _useCallbackRef2[1];\n\n  var mergedRef = useMergedRefs(attachRef, outerRef);\n  var container = useWaitForDOMRef(props.container);\n  var target = useWaitForDOMRef(props.target);\n\n  var _useState = useState(!props.show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var modifiers = toModifierMap(popperConfig.modifiers);\n\n  var _usePopper = usePopper(target, rootElement, _extends({}, popperConfig, {\n    placement: placement || 'bottom',\n    modifiers: _extends({}, modifiers, {\n      eventListeners: {\n        enabled: !!props.show\n      },\n      preventOverflow: _extends({}, modifiers.preventOverflow, {\n        options: _extends({\n          padding: containerPadding || 5\n        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options)\n      }),\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    })\n  })),\n      styles = _usePopper.styles,\n      arrowStyles = _usePopper.arrowStyles,\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"arrowStyles\"]);\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited.apply(props, arguments);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  var mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  var child = props.children(_extends({}, popper, {\n    show: props.show,\n    props: {\n      style: styles,\n      ref: mergedRef\n    },\n    arrowProps: {\n      style: arrowStyles,\n      ref: attachArrowRef\n    }\n  }));\n\n  if (Transition) {\n    var onExit = props.onExit,\n        onExiting = props.onExiting,\n        onEnter = props.onEnter,\n        onEntering = props.onEntering,\n        onEntered = props.onEntered;\n    child = React.createElement(Transition, {\n      \"in\": props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, child);\n  }\n\n  return container ? ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nOverlay.propTypes = {\n  /**\n   * Set the visibility of the Overlay\n   */\n  show: PropTypes.bool,\n\n  /** Specify where the overlay element is positioned in relation to the target element */\n  placement: PropTypes.oneOf(placements),\n\n  /**\n   * A DOM Element, Ref to an element, or function that returns either. The `target` element is where\n   * the overlay is positioned relative to.\n   */\n  target: PropTypes.any,\n\n  /**\n   * A DOM Element, Ref to an element, or function that returns either. The `container` will have the Portal children\n   * appended to it.\n   */\n  container: PropTypes.any,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Overlay to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n\n  /**\n   * A render prop that returns an element to overlay and position. See\n   * the [react-popper documentation](https://github.com/FezVrasta/react-popper#children) for more info.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   placement: Placement,\n   *   outOfBoundaries: ?boolean,\n   *   scheduleUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Control how much space there is between the edge of the boundary element and overlay.\n   * A convenience shortcut to setting `popperConfig.modfiers.preventOverflow.padding`\n   */\n  containerPadding: PropTypes.number,\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay\n   */\n  rootClose: PropTypes.bool,\n\n  /**\n   * Specify event for toggling overlay\n   */\n  rootCloseEvent: PropTypes.oneOf(['click', 'mousedown']),\n\n  /**\n   * Specify disabled for disable RootCloseWrapper\n   */\n  rootCloseDisabled: PropTypes.bool,\n\n  /**\n   * A Callback fired by the Overlay when it wishes to be hidden.\n   *\n   * __required__ when `rootClose` is `true`.\n   *\n   * @type func\n   */\n  onHide: function onHide(props) {\n    var propType = PropTypes.func;\n\n    if (props.rootClose) {\n      propType = propType.isRequired;\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component\n   * used to animate the overlay as it changes visibility.\n   */\n  transition: PropTypes.elementType,\n\n  /**\n   * Callback fired before the Overlay transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Overlay transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning out\n   */\n  onExited: PropTypes.func\n};\nOverlay.defaultProps = {\n  containerPadding: 5\n};\nexport default Overlay;","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/SE_project/khanashana/node_modules/react-overlays/esm/Overlay.js"],"names":["_extends","_objectWithoutPropertiesLoose","PropTypes","React","useState","ReactDOM","useCallbackRef","useMergedRefs","placements","usePopper","toModifierMap","useRootClose","useWaitForDOMRef","Overlay","forwardRef","props","outerRef","_modifiers$preventOve","_modifiers$arrow","flip","placement","containerPadding","_props$popperConfig","popperConfig","Transition","transition","_useCallbackRef","rootElement","attachRef","_useCallbackRef2","arrowElement","attachArrowRef","mergedRef","container","target","_useState","show","exited","setExited","modifiers","_usePopper","eventListeners","enabled","preventOverflow","options","padding","arrow","element","styles","arrowStyles","popper","handleHidden","onExited","apply","arguments","mountOverlay","onHide","disabled","rootClose","rootCloseDisabled","clickTrigger","rootCloseEvent","child","children","style","ref","arrowProps","onExit","onExiting","onEnter","onEntering","onEntered","createElement","appear","createPortal","displayName","propTypes","bool","oneOf","any","func","isRequired","number","object","propType","_len","length","args","Array","_key","concat","elementType","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { placements } from './popper';\nimport usePopper, { toModifierMap } from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './utils/useWaitForDOMRef';\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\n\nvar Overlay = React.forwardRef(function (props, outerRef) {\n  var _modifiers$preventOve, _modifiers$arrow;\n\n  var flip = props.flip,\n      placement = props.placement,\n      containerPadding = props.containerPadding,\n      _props$popperConfig = props.popperConfig,\n      popperConfig = _props$popperConfig === void 0 ? {} : _props$popperConfig,\n      Transition = props.transition;\n\n  var _useCallbackRef = useCallbackRef(),\n      rootElement = _useCallbackRef[0],\n      attachRef = _useCallbackRef[1];\n\n  var _useCallbackRef2 = useCallbackRef(),\n      arrowElement = _useCallbackRef2[0],\n      attachArrowRef = _useCallbackRef2[1];\n\n  var mergedRef = useMergedRefs(attachRef, outerRef);\n  var container = useWaitForDOMRef(props.container);\n  var target = useWaitForDOMRef(props.target);\n\n  var _useState = useState(!props.show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var modifiers = toModifierMap(popperConfig.modifiers);\n\n  var _usePopper = usePopper(target, rootElement, _extends({}, popperConfig, {\n    placement: placement || 'bottom',\n    modifiers: _extends({}, modifiers, {\n      eventListeners: {\n        enabled: !!props.show\n      },\n      preventOverflow: _extends({}, modifiers.preventOverflow, {\n        options: _extends({\n          padding: containerPadding || 5\n        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options)\n      }),\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    })\n  })),\n      styles = _usePopper.styles,\n      arrowStyles = _usePopper.arrowStyles,\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"arrowStyles\"]);\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited.apply(props, arguments);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  var mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  var child = props.children(_extends({}, popper, {\n    show: props.show,\n    props: {\n      style: styles,\n      ref: mergedRef\n    },\n    arrowProps: {\n      style: arrowStyles,\n      ref: attachArrowRef\n    }\n  }));\n\n  if (Transition) {\n    var onExit = props.onExit,\n        onExiting = props.onExiting,\n        onEnter = props.onEnter,\n        onEntering = props.onEntering,\n        onEntered = props.onEntered;\n    child = React.createElement(Transition, {\n      \"in\": props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, child);\n  }\n\n  return container ? ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nOverlay.propTypes = {\n  /**\n   * Set the visibility of the Overlay\n   */\n  show: PropTypes.bool,\n\n  /** Specify where the overlay element is positioned in relation to the target element */\n  placement: PropTypes.oneOf(placements),\n\n  /**\n   * A DOM Element, Ref to an element, or function that returns either. The `target` element is where\n   * the overlay is positioned relative to.\n   */\n  target: PropTypes.any,\n\n  /**\n   * A DOM Element, Ref to an element, or function that returns either. The `container` will have the Portal children\n   * appended to it.\n   */\n  container: PropTypes.any,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Overlay to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n\n  /**\n   * A render prop that returns an element to overlay and position. See\n   * the [react-popper documentation](https://github.com/FezVrasta/react-popper#children) for more info.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   placement: Placement,\n   *   outOfBoundaries: ?boolean,\n   *   scheduleUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Control how much space there is between the edge of the boundary element and overlay.\n   * A convenience shortcut to setting `popperConfig.modfiers.preventOverflow.padding`\n   */\n  containerPadding: PropTypes.number,\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay\n   */\n  rootClose: PropTypes.bool,\n\n  /**\n   * Specify event for toggling overlay\n   */\n  rootCloseEvent: PropTypes.oneOf(['click', 'mousedown']),\n\n  /**\n   * Specify disabled for disable RootCloseWrapper\n   */\n  rootCloseDisabled: PropTypes.bool,\n\n  /**\n   * A Callback fired by the Overlay when it wishes to be hidden.\n   *\n   * __required__ when `rootClose` is `true`.\n   *\n   * @type func\n   */\n  onHide: function onHide(props) {\n    var propType = PropTypes.func;\n\n    if (props.rootClose) {\n      propType = propType.isRequired;\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component\n   * used to animate the overlay as it changes visibility.\n   */\n  transition: PropTypes.elementType,\n\n  /**\n   * Callback fired before the Overlay transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Overlay transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning out\n   */\n  onExited: PropTypes.func\n};\nOverlay.defaultProps = {\n  containerPadding: 5\n};\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}