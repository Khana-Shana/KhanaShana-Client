{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper, { toModifierMap } from './usePopper';\nimport useRootClose from './useRootClose';\nexport function useDropdownMenu(options) {\n  var _modifiers$arrow;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? true : _options$usePopper;\n  var show = context.show == null ? options.show : context.show;\n  var alignEnd = context.alignEnd == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    if (!context.toggle) return;\n    context.toggle(false, e);\n  };\n\n  var drop = context.drop,\n      setMenu = context.setMenu,\n      menuElement = context.menuElement,\n      toggleElement = context.toggleElement;\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var modifiers = toModifierMap(popperConfig.modifiers);\n  var popper = usePopper(toggleElement, menuElement, _extends({}, popperConfig, {\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    modifiers: _extends({}, modifiers, {\n      eventListeners: {\n        enabled: !!show\n      },\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    })\n  }));\n  var menu = null;\n  var menuProps = {\n    ref: setMenu,\n    'aria-labelledby': toggleElement && toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, {}, childArgs, {\n      props: _extends({}, menuProps, {\n        style: popper.styles\n      }),\n      arrowProps: {\n        ref: attachArrowRef,\n        style: popper.arrowStyles\n      }\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   outOfBoundaries: ?boolean,\n   *   scheduleUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\nfunction DropdownMenu(_ref) {\n  var children = _ref.children,\n      options = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return args.hasShown ? children(args) : null;\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","map":{"version":3,"sources":["/media/muji/Local Disk/University/1902/Software_Engineering/SE Project/Development/KhanaShana-Client/node_modules/react-overlays/esm/DropdownMenu.js"],"names":["_objectWithoutPropertiesLoose","_extends","PropTypes","useContext","useRef","useCallbackRef","DropdownContext","usePopper","toModifierMap","useRootClose","useDropdownMenu","options","_modifiers$arrow","context","_useCallbackRef","arrowElement","attachArrowRef","hasShownRef","_options","flip","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","shouldUsePopper","show","alignEnd","current","handleClose","e","toggle","drop","setMenu","menuElement","toggleElement","placement","modifiers","popper","enabled","eventListeners","arrow","element","menu","menuProps","ref","id","childArgs","hasShown","close","props","style","styles","arrowProps","arrowStyles","clickTrigger","disabled","propTypes","children","func","isRequired","bool","oneOf","object","string","defaultProps","DropdownMenu","_ref","args","displayName"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper, { toModifierMap } from './usePopper';\nimport useRootClose from './useRootClose';\nexport function useDropdownMenu(options) {\n  var _modifiers$arrow;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? true : _options$usePopper;\n  var show = context.show == null ? options.show : context.show;\n  var alignEnd = context.alignEnd == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    if (!context.toggle) return;\n    context.toggle(false, e);\n  };\n\n  var drop = context.drop,\n      setMenu = context.setMenu,\n      menuElement = context.menuElement,\n      toggleElement = context.toggleElement;\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var modifiers = toModifierMap(popperConfig.modifiers);\n  var popper = usePopper(toggleElement, menuElement, _extends({}, popperConfig, {\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    modifiers: _extends({}, modifiers, {\n      eventListeners: {\n        enabled: !!show\n      },\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    })\n  }));\n  var menu = null;\n  var menuProps = {\n    ref: setMenu,\n    'aria-labelledby': toggleElement && toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, {}, childArgs, {\n      props: _extends({}, menuProps, {\n        style: popper.styles\n      }),\n      arrowProps: {\n        ref: attachArrowRef,\n        style: popper.arrowStyles\n      }\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   outOfBoundaries: ?boolean,\n   *   scheduleUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\nfunction DropdownMenu(_ref) {\n  var children = _ref.children,\n      options = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return args.hasShown ? children(args) : null;\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}