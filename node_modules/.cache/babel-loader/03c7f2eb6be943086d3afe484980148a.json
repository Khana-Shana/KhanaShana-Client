{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isNil from \"lodash/isNil\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _trim from \"lodash/trim\";\nimport _isArray from \"lodash/isArray\";\nimport _intersection from \"lodash/intersection\";\nimport * as React from 'react';\nimport { reactToString, shallowEqual, shallowEqualArray } from 'rsuite-utils/lib/utils';\nvar SEARCH_BAR_HEIGHT = 48;\nvar MENU_PADDING = 12;\n/**\n * 判断当前节点是否应该显示\n * @param {*} expandItemValues\n * @param {*} parentKeys\n */\n\nexport function shouldShowNodeByExpanded(expandItemValues, parentKeys) {\n  if (expandItemValues === void 0) {\n    expandItemValues = [];\n  }\n\n  if (parentKeys === void 0) {\n    parentKeys = [];\n  }\n\n  var intersectionKeys = _intersection(expandItemValues, parentKeys);\n\n  if (intersectionKeys.length === parentKeys.length) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * 拍平树结构为数组\n * @param {*} tree\n * @param {*} childrenKey\n * @param {*} executor\n */\n\nexport function flattenTree(tree, childrenKey, executor) {\n  if (childrenKey === void 0) {\n    childrenKey = 'children';\n  }\n\n  var flattenData = [];\n\n  var traverse = function traverse(data, parent) {\n    if (!_isArray(data)) {\n      return;\n    }\n\n    data.forEach(function (item, index) {\n      var node = typeof executor === 'function' ? executor(item, index) : item;\n      node.parent = parent;\n      flattenData.push(_extends({}, node));\n\n      if (item[childrenKey]) {\n        traverse(item[childrenKey], item);\n      }\n    });\n  };\n\n  traverse(tree, null);\n  return flattenData;\n}\n/**\n * 获取树节点所有的祖先节点\n * @param {*} node\n */\n\nexport function getNodeParents(node, parentKey, valueKey) {\n  if (parentKey === void 0) {\n    parentKey = 'parent';\n  }\n\n  var parents = [];\n\n  var traverse = function traverse(node) {\n    if (node === null || node === void 0 ? void 0 : node[parentKey]) {\n      traverse(node[parentKey]);\n\n      if (valueKey) {\n        parents.push(node[parentKey][valueKey]);\n      } else {\n        parents.push(node[parentKey]);\n      }\n    }\n  };\n\n  traverse(node);\n  return parents;\n}\n/**\n * 判断当前节点是否显示\n * @param {*} label\n * @param {*} searchKeyword\n */\n\nexport function shouldDisplay(label, searchKeyword) {\n  if (!_trim(searchKeyword)) {\n    return true;\n  }\n\n  var keyword = searchKeyword.toLocaleLowerCase();\n\n  if (typeof label === 'string') {\n    return label.toLocaleLowerCase().indexOf(keyword) >= 0;\n  } else if (React.isValidElement(label)) {\n    var nodes = reactToString(label);\n    return nodes.join('').toLocaleLowerCase().indexOf(keyword) >= 0;\n  }\n\n  return false;\n}\n/**\n * 获取 VirtualList 的高度\n * @param {*} inline\n * @param {*} height\n */\n\nexport function getVirtualLisHeight(inline, height) {\n  if (height === void 0) {\n    height = 0;\n  }\n\n  return inline ? height - MENU_PADDING * 2 : height - SEARCH_BAR_HEIGHT - MENU_PADDING * 2;\n}\n/**\n * 判断节点是否存在可见的子节点。\n * @param node\n */\n\nexport function hasVisibleChildren(node, childrenKey) {\n  if (!Array.isArray(node[childrenKey])) {\n    return false;\n  }\n\n  return node[childrenKey].some(function (child) {\n    return child.visible;\n  });\n}\n/**\n * 废弃 prop warning\n * @param prop\n */\n\nexport function treeDeprecatedWarning(props, keys) {\n  if (keys === void 0) {\n    keys = [];\n  }\n\n  keys.forEach(function (key) {\n    if (!_isUndefined(props[key])) {\n      console.warn(\"'Warning: \" + key + \" is deprecated and will be removed in a future release.'\");\n    }\n  });\n}\n/**\n * 浅比较两个数组是否不一样\n * @param a\n * @param b\n */\n\nexport function compareArray(a, b) {\n  return _isArray(a) && _isArray(b) && !shallowEqualArray(a, b);\n}\n/**\n * 获取 expandAll 的 value\n * @param props\n */\n\nexport function getExpandAll(props) {\n  var expandAll = props.expandAll,\n      defaultExpandAll = props.defaultExpandAll;\n  return !_isUndefined(expandAll) ? expandAll : defaultExpandAll;\n}\n/**\n * 获取 expandItemValues 的 value\n * @param props\n */\n\nexport function getExpandItemValues(props) {\n  var expandItemValues = props.expandItemValues,\n      defaultExpandItemValues = props.defaultExpandItemValues;\n\n  if (!_isUndefined(expandItemValues) && Array.isArray(expandItemValues)) {\n    return expandItemValues;\n  }\n\n  if (!_isUndefined(defaultExpandItemValues) && Array.isArray(defaultExpandItemValues)) {\n    return defaultExpandItemValues;\n  }\n\n  return [];\n}\n/**\n * 获取节点展开状态\n * @param node\n * @param props\n */\n\nexport function getExpandState(node, props) {\n  var _node$childrenKey;\n\n  var valueKey = props.valueKey,\n      childrenKey = props.childrenKey,\n      expandItemValues = props.expandItemValues;\n  var expandAll = getExpandAll(props);\n  var expand = getExpandItemValues(props).some(function (value) {\n    return shallowEqual(node[valueKey], value);\n  });\n\n  if (!_isUndefined(expandItemValues)) {\n    return expand;\n  } else if ((_node$childrenKey = node[childrenKey]) === null || _node$childrenKey === void 0 ? void 0 : _node$childrenKey.length) {\n    if (!_isNil(node.expand)) {\n      return !!node.expand;\n    } else if (expandAll) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/node_modules/rsuite/es/utils/treeUtils.js"],"names":["_extends","_isNil","_isUndefined","_trim","_isArray","_intersection","React","reactToString","shallowEqual","shallowEqualArray","SEARCH_BAR_HEIGHT","MENU_PADDING","shouldShowNodeByExpanded","expandItemValues","parentKeys","intersectionKeys","length","flattenTree","tree","childrenKey","executor","flattenData","traverse","data","parent","forEach","item","index","node","push","getNodeParents","parentKey","valueKey","parents","shouldDisplay","label","searchKeyword","keyword","toLocaleLowerCase","indexOf","isValidElement","nodes","join","getVirtualLisHeight","inline","height","hasVisibleChildren","Array","isArray","some","child","visible","treeDeprecatedWarning","props","keys","key","console","warn","compareArray","a","b","getExpandAll","expandAll","defaultExpandAll","getExpandItemValues","defaultExpandItemValues","getExpandState","_node$childrenKey","expand","value"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isNil from \"lodash/isNil\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _trim from \"lodash/trim\";\nimport _isArray from \"lodash/isArray\";\nimport _intersection from \"lodash/intersection\";\nimport * as React from 'react';\nimport { reactToString, shallowEqual, shallowEqualArray } from 'rsuite-utils/lib/utils';\nvar SEARCH_BAR_HEIGHT = 48;\nvar MENU_PADDING = 12;\n/**\n * 判断当前节点是否应该显示\n * @param {*} expandItemValues\n * @param {*} parentKeys\n */\n\nexport function shouldShowNodeByExpanded(expandItemValues, parentKeys) {\n  if (expandItemValues === void 0) {\n    expandItemValues = [];\n  }\n\n  if (parentKeys === void 0) {\n    parentKeys = [];\n  }\n\n  var intersectionKeys = _intersection(expandItemValues, parentKeys);\n\n  if (intersectionKeys.length === parentKeys.length) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * 拍平树结构为数组\n * @param {*} tree\n * @param {*} childrenKey\n * @param {*} executor\n */\n\nexport function flattenTree(tree, childrenKey, executor) {\n  if (childrenKey === void 0) {\n    childrenKey = 'children';\n  }\n\n  var flattenData = [];\n\n  var traverse = function traverse(data, parent) {\n    if (!_isArray(data)) {\n      return;\n    }\n\n    data.forEach(function (item, index) {\n      var node = typeof executor === 'function' ? executor(item, index) : item;\n      node.parent = parent;\n      flattenData.push(_extends({}, node));\n\n      if (item[childrenKey]) {\n        traverse(item[childrenKey], item);\n      }\n    });\n  };\n\n  traverse(tree, null);\n  return flattenData;\n}\n/**\n * 获取树节点所有的祖先节点\n * @param {*} node\n */\n\nexport function getNodeParents(node, parentKey, valueKey) {\n  if (parentKey === void 0) {\n    parentKey = 'parent';\n  }\n\n  var parents = [];\n\n  var traverse = function traverse(node) {\n    if (node === null || node === void 0 ? void 0 : node[parentKey]) {\n      traverse(node[parentKey]);\n\n      if (valueKey) {\n        parents.push(node[parentKey][valueKey]);\n      } else {\n        parents.push(node[parentKey]);\n      }\n    }\n  };\n\n  traverse(node);\n  return parents;\n}\n/**\n * 判断当前节点是否显示\n * @param {*} label\n * @param {*} searchKeyword\n */\n\nexport function shouldDisplay(label, searchKeyword) {\n  if (!_trim(searchKeyword)) {\n    return true;\n  }\n\n  var keyword = searchKeyword.toLocaleLowerCase();\n\n  if (typeof label === 'string') {\n    return label.toLocaleLowerCase().indexOf(keyword) >= 0;\n  } else if (React.isValidElement(label)) {\n    var nodes = reactToString(label);\n    return nodes.join('').toLocaleLowerCase().indexOf(keyword) >= 0;\n  }\n\n  return false;\n}\n/**\n * 获取 VirtualList 的高度\n * @param {*} inline\n * @param {*} height\n */\n\nexport function getVirtualLisHeight(inline, height) {\n  if (height === void 0) {\n    height = 0;\n  }\n\n  return inline ? height - MENU_PADDING * 2 : height - SEARCH_BAR_HEIGHT - MENU_PADDING * 2;\n}\n/**\n * 判断节点是否存在可见的子节点。\n * @param node\n */\n\nexport function hasVisibleChildren(node, childrenKey) {\n  if (!Array.isArray(node[childrenKey])) {\n    return false;\n  }\n\n  return node[childrenKey].some(function (child) {\n    return child.visible;\n  });\n}\n/**\n * 废弃 prop warning\n * @param prop\n */\n\nexport function treeDeprecatedWarning(props, keys) {\n  if (keys === void 0) {\n    keys = [];\n  }\n\n  keys.forEach(function (key) {\n    if (!_isUndefined(props[key])) {\n      console.warn(\"'Warning: \" + key + \" is deprecated and will be removed in a future release.'\");\n    }\n  });\n}\n/**\n * 浅比较两个数组是否不一样\n * @param a\n * @param b\n */\n\nexport function compareArray(a, b) {\n  return _isArray(a) && _isArray(b) && !shallowEqualArray(a, b);\n}\n/**\n * 获取 expandAll 的 value\n * @param props\n */\n\nexport function getExpandAll(props) {\n  var expandAll = props.expandAll,\n      defaultExpandAll = props.defaultExpandAll;\n  return !_isUndefined(expandAll) ? expandAll : defaultExpandAll;\n}\n/**\n * 获取 expandItemValues 的 value\n * @param props\n */\n\nexport function getExpandItemValues(props) {\n  var expandItemValues = props.expandItemValues,\n      defaultExpandItemValues = props.defaultExpandItemValues;\n\n  if (!_isUndefined(expandItemValues) && Array.isArray(expandItemValues)) {\n    return expandItemValues;\n  }\n\n  if (!_isUndefined(defaultExpandItemValues) && Array.isArray(defaultExpandItemValues)) {\n    return defaultExpandItemValues;\n  }\n\n  return [];\n}\n/**\n * 获取节点展开状态\n * @param node\n * @param props\n */\n\nexport function getExpandState(node, props) {\n  var _node$childrenKey;\n\n  var valueKey = props.valueKey,\n      childrenKey = props.childrenKey,\n      expandItemValues = props.expandItemValues;\n  var expandAll = getExpandAll(props);\n  var expand = getExpandItemValues(props).some(function (value) {\n    return shallowEqual(node[valueKey], value);\n  });\n\n  if (!_isUndefined(expandItemValues)) {\n    return expand;\n  } else if ((_node$childrenKey = node[childrenKey]) === null || _node$childrenKey === void 0 ? void 0 : _node$childrenKey.length) {\n    if (!_isNil(node.expand)) {\n      return !!node.expand;\n    } else if (expandAll) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"module"}