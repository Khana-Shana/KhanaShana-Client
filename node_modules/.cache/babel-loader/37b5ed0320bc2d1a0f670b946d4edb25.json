{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _maxBy = require('lodash/maxBy');\n\nvar _maxBy2 = _interopRequireDefault(_maxBy);\n\nvar _minBy = require('lodash/minBy');\n\nvar _minBy2 = _interopRequireDefault(_minBy);\n\nvar _kebabCase = require('lodash/kebabCase');\n\nvar _kebabCase2 = _interopRequireDefault(_kebabCase);\n\nvar _domLib = require('dom-lib');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar AutoPlacement = {\n  left: 'Start',\n  right: 'End',\n  top: 'Start',\n  bottom: 'End'\n};\n\nfunction getContainerDimensions(containerNode) {\n  var width = void 0;\n  var height = void 0;\n  var scrollX = void 0;\n  var scrollY = void 0;\n\n  if (containerNode.tagName === 'BODY') {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    scrollY = (0, _domLib.scrollTop)((0, _domLib.ownerDocument)(containerNode).documentElement) || (0, _domLib.scrollTop)(containerNode);\n    scrollX = (0, _domLib.scrollLeft)((0, _domLib.ownerDocument)(containerNode).documentElement) || (0, _domLib.scrollLeft)(containerNode);\n  } else {\n    var _getOffset = (0, _domLib.getOffset)(containerNode);\n\n    width = _getOffset.width;\n    height = _getOffset.height;\n    scrollY = (0, _domLib.scrollTop)(containerNode);\n    scrollX = (0, _domLib.scrollLeft)(containerNode);\n  }\n\n  return {\n    width: width,\n    height: height,\n    scrollX: scrollX,\n    scrollY: scrollY\n  };\n}\n\nexports.default = function (props) {\n  var placement = props.placement,\n      preventOverflow = props.preventOverflow,\n      padding = props.padding;\n\n  function getTopDelta(top, overlayHeight, container) {\n    if (!preventOverflow) {\n      return 0;\n    }\n\n    var containerDimensions = getContainerDimensions(container);\n    var containerHeight = containerDimensions.height,\n        scrollY = containerDimensions.scrollY;\n    var topEdgeOffset = top - padding - scrollY;\n    var bottomEdgeOffset = top + padding + overlayHeight - scrollY;\n\n    if (topEdgeOffset < 0) {\n      return -topEdgeOffset;\n    } else if (bottomEdgeOffset > containerHeight) {\n      return containerHeight - bottomEdgeOffset;\n    }\n\n    return 0;\n  }\n\n  function getLeftDelta(left, overlayWidth, container) {\n    if (!preventOverflow) {\n      return 0;\n    }\n\n    var containerDimensions = getContainerDimensions(container);\n    var scrollX = containerDimensions.scrollX,\n        containerWidth = containerDimensions.width;\n    var leftEdgeOffset = left - padding - scrollX;\n    var rightEdgeOffset = left + padding + overlayWidth - scrollX;\n\n    if (leftEdgeOffset < 0) {\n      return -leftEdgeOffset;\n    } else if (rightEdgeOffset > containerWidth) {\n      return containerWidth - rightEdgeOffset;\n    }\n\n    return 0;\n  }\n\n  function getPositionTop(container, overlayHeight, top) {\n    if (!preventOverflow) {\n      return top;\n    }\n\n    var _getContainerDimensio = getContainerDimensions(container),\n        scrollY = _getContainerDimensio.scrollY,\n        containerHeight = _getContainerDimensio.height; // 判断 overlay 底部是否溢出，设置 top\n\n\n    if (overlayHeight + top > containerHeight + scrollY) {\n      return containerHeight - overlayHeight + scrollY;\n    } // top 的最小值不能少于纵向滚动条 y 的值\n\n\n    return Math.max(scrollY, top);\n  }\n\n  function getPositionLeft(container, overlayWidth, left) {\n    if (!preventOverflow) {\n      return left;\n    }\n\n    var _getContainerDimensio2 = getContainerDimensions(container),\n        scrollX = _getContainerDimensio2.scrollX,\n        containerWidth = _getContainerDimensio2.width;\n\n    if (overlayWidth + left > containerWidth + scrollX) {\n      return containerWidth - overlayWidth + scrollX;\n    } // left 的最小值不能少于横向滚动条 x 的值\n\n\n    return Math.max(scrollX, left);\n  }\n\n  return {\n    getPosition: function getPosition(target, container) {\n      var offset = container.tagName === 'BODY' ? (0, _domLib.getOffset)(target) : (0, _domLib.getPosition)(target, container);\n      return offset;\n    },\n    calcAutoPlacement: function calcAutoPlacement(targetOffset, container, overlay) {\n      var _getContainerDimensio3 = getContainerDimensions(container),\n          width = _getContainerDimensio3.width,\n          height = _getContainerDimensio3.height,\n          scrollX = _getContainerDimensio3.scrollX,\n          scrollY = _getContainerDimensio3.scrollY;\n\n      var left = targetOffset.left - scrollX - overlay.width;\n      var top = targetOffset.top - scrollY - overlay.height;\n      var right = width - targetOffset.left - targetOffset.width + scrollX - overlay.width;\n      var bottom = height - targetOffset.top - targetOffset.height + scrollY - overlay.height;\n      var horizontal = [{\n        key: 'left',\n        value: left\n      }, {\n        key: 'right',\n        value: right\n      }];\n      var vertical = [{\n        key: 'top',\n        value: top\n      }, {\n        key: 'bottom',\n        value: bottom\n      }];\n      var AV = 'autoVertical';\n      var AH = 'autoHorizontal';\n      var direction = void 0;\n      var align = void 0;\n\n      if (placement.indexOf(AV) !== -1) {\n        direction = (0, _maxBy2.default)(vertical, function (o) {\n          return o.value;\n        });\n        return placement === AV ? direction.key : '' + direction.key + placement.replace(AV, '');\n      } else if (placement.indexOf(AH) !== -1) {\n        direction = (0, _maxBy2.default)(horizontal, function (o) {\n          return o.value;\n        });\n        return placement === AH ? direction.key : '' + direction.key + placement.replace(AH, '');\n      }\n      /**\n       * Precedence Vertical\n       * [...vertical, ...horizontal]\n       */\n\n\n      direction = (0, _maxBy2.default)([].concat(vertical, horizontal), function (o) {\n        return o.value;\n      });\n\n      if (direction.key === 'left' || direction.key === 'right') {\n        align = (0, _minBy2.default)(vertical, function (o) {\n          return o.value;\n        });\n      } else {\n        align = (0, _minBy2.default)(horizontal, function (o) {\n          return o.value;\n        });\n      }\n\n      return '' + direction.key + AutoPlacement[align.key];\n    },\n    // 计算浮层的位置\n    calcOverlayPosition: function calcOverlayPosition(overlayNode, target, container) {\n      var childOffset = this.getPosition(target, container);\n\n      var _getOffset2 = (0, _domLib.getOffset)(overlayNode),\n          overlayHeight = _getOffset2.height,\n          overlayWidth = _getOffset2.width;\n\n      var top = childOffset.top,\n          left = childOffset.left;\n      var nextPlacement = placement;\n\n      if (placement && placement.indexOf('auto') >= 0) {\n        nextPlacement = this.calcAutoPlacement(childOffset, container, {\n          height: overlayHeight,\n          width: overlayWidth\n        });\n      }\n\n      var positionLeft = void 0;\n      var positionTop = void 0;\n      var arrowOffsetLeft = void 0;\n      var arrowOffsetTop = void 0;\n\n      if (nextPlacement === 'left' || nextPlacement === 'right') {\n        positionTop = childOffset.top + (childOffset.height - overlayHeight) / 2;\n        var topDelta = getTopDelta(positionTop, overlayHeight, container);\n        positionTop += topDelta;\n        arrowOffsetTop = 50 * (1 - 2 * topDelta / overlayHeight) + '%';\n        arrowOffsetLeft = undefined;\n      } else if (nextPlacement === 'top' || nextPlacement === 'bottom') {\n        positionLeft = left + (childOffset.width - overlayWidth) / 2;\n        var leftDelta = getLeftDelta(positionLeft, overlayWidth, container);\n        positionLeft += leftDelta;\n        arrowOffsetLeft = 50 * (1 - 2 * leftDelta / overlayWidth) + '%';\n        arrowOffsetTop = undefined;\n      }\n\n      if (nextPlacement === 'top' || nextPlacement === 'topStart' || nextPlacement === 'topEnd') {\n        positionTop = getPositionTop(container, overlayHeight, childOffset.top - overlayHeight);\n      }\n\n      if (nextPlacement === 'bottom' || nextPlacement === 'bottomStart' || nextPlacement === 'bottomEnd') {\n        positionTop = getPositionTop(container, overlayHeight, childOffset.top + childOffset.height);\n      }\n\n      if (nextPlacement === 'left' || nextPlacement === 'leftStart' || nextPlacement === 'leftEnd') {\n        positionLeft = getPositionLeft(container, overlayWidth, childOffset.left - overlayWidth);\n      }\n\n      if (nextPlacement === 'right' || nextPlacement === 'rightStart' || nextPlacement === 'rightEnd') {\n        positionLeft = getPositionLeft(container, overlayWidth, childOffset.left + childOffset.width);\n      }\n\n      if (document.dir === 'rtl' && (nextPlacement === 'left' || nextPlacement === 'leftStart' || nextPlacement === 'leftEnd' || nextPlacement === 'right' || nextPlacement === 'rightStart' || nextPlacement === 'rightEnd')) {\n        /**\n         * When laying out in rtl, if the width of the container\n         * is less than the width of the container scrolling,\n         * you need to recalculate the left value.\n         */\n        var _getContainerDimensio4 = getContainerDimensions(container),\n            containerWidth = _getContainerDimensio4.width;\n\n        if (container.scrollWidth > containerWidth) {\n          positionLeft = containerWidth + positionLeft - container.scrollWidth;\n        }\n      }\n\n      if (nextPlacement === 'topStart' || nextPlacement === 'bottomStart') {\n        if (document.dir === 'rtl') {\n          var nextLeft = left + (childOffset.width - overlayWidth);\n          positionLeft = nextLeft + getLeftDelta(nextLeft, overlayWidth, container);\n        } else {\n          positionLeft = left + getLeftDelta(left, overlayWidth, container);\n        }\n      }\n\n      if (nextPlacement === 'topEnd' || nextPlacement === 'bottomEnd') {\n        if (document.dir === 'rtl') {\n          positionLeft = left + getLeftDelta(left, overlayWidth, container);\n        } else {\n          var _nextLeft = left + (childOffset.width - overlayWidth);\n\n          positionLeft = _nextLeft + getLeftDelta(_nextLeft, overlayWidth, container);\n        }\n      }\n\n      if (nextPlacement === 'leftStart' || nextPlacement === 'rightStart') {\n        positionTop = top + getTopDelta(top, overlayHeight, container);\n      }\n\n      if (nextPlacement === 'leftEnd' || nextPlacement === 'rightEnd') {\n        var nextTop = top + (childOffset.height - overlayHeight);\n        positionTop = nextTop + getTopDelta(nextTop, overlayHeight, container);\n      }\n\n      return {\n        positionLeft: positionLeft,\n        positionTop: positionTop,\n        arrowOffsetLeft: arrowOffsetLeft,\n        arrowOffsetTop: arrowOffsetTop,\n        positionClassName: 'placement-' + (0, _kebabCase2.default)(nextPlacement)\n      };\n    }\n  };\n};","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/node_modules/rsuite-utils/lib/utils/overlayPositionUtils.js"],"names":["Object","defineProperty","exports","value","_maxBy","require","_maxBy2","_interopRequireDefault","_minBy","_minBy2","_kebabCase","_kebabCase2","_domLib","obj","__esModule","default","AutoPlacement","left","right","top","bottom","getContainerDimensions","containerNode","width","height","scrollX","scrollY","tagName","window","innerWidth","innerHeight","scrollTop","ownerDocument","documentElement","scrollLeft","_getOffset","getOffset","props","placement","preventOverflow","padding","getTopDelta","overlayHeight","container","containerDimensions","containerHeight","topEdgeOffset","bottomEdgeOffset","getLeftDelta","overlayWidth","containerWidth","leftEdgeOffset","rightEdgeOffset","getPositionTop","_getContainerDimensio","Math","max","getPositionLeft","_getContainerDimensio2","getPosition","target","offset","calcAutoPlacement","targetOffset","overlay","_getContainerDimensio3","horizontal","key","vertical","AV","AH","direction","align","indexOf","o","replace","concat","calcOverlayPosition","overlayNode","childOffset","_getOffset2","nextPlacement","positionLeft","positionTop","arrowOffsetLeft","arrowOffsetTop","topDelta","undefined","leftDelta","document","dir","_getContainerDimensio4","scrollWidth","nextLeft","_nextLeft","nextTop","positionClassName"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _maxBy = require('lodash/maxBy');\n\nvar _maxBy2 = _interopRequireDefault(_maxBy);\n\nvar _minBy = require('lodash/minBy');\n\nvar _minBy2 = _interopRequireDefault(_minBy);\n\nvar _kebabCase = require('lodash/kebabCase');\n\nvar _kebabCase2 = _interopRequireDefault(_kebabCase);\n\nvar _domLib = require('dom-lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AutoPlacement = {\n  left: 'Start',\n  right: 'End',\n  top: 'Start',\n  bottom: 'End'\n};\n\nfunction getContainerDimensions(containerNode) {\n  var width = void 0;\n  var height = void 0;\n  var scrollX = void 0;\n  var scrollY = void 0;\n  if (containerNode.tagName === 'BODY') {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    scrollY = (0, _domLib.scrollTop)((0, _domLib.ownerDocument)(containerNode).documentElement) || (0, _domLib.scrollTop)(containerNode);\n    scrollX = (0, _domLib.scrollLeft)((0, _domLib.ownerDocument)(containerNode).documentElement) || (0, _domLib.scrollLeft)(containerNode);\n  } else {\n    var _getOffset = (0, _domLib.getOffset)(containerNode);\n\n    width = _getOffset.width;\n    height = _getOffset.height;\n\n    scrollY = (0, _domLib.scrollTop)(containerNode);\n    scrollX = (0, _domLib.scrollLeft)(containerNode);\n  }\n  return { width: width, height: height, scrollX: scrollX, scrollY: scrollY };\n}\n\nexports.default = function (props) {\n  var placement = props.placement,\n      preventOverflow = props.preventOverflow,\n      padding = props.padding;\n\n\n  function getTopDelta(top, overlayHeight, container) {\n    if (!preventOverflow) {\n      return 0;\n    }\n    var containerDimensions = getContainerDimensions(container);\n    var containerHeight = containerDimensions.height,\n        scrollY = containerDimensions.scrollY;\n\n\n    var topEdgeOffset = top - padding - scrollY;\n    var bottomEdgeOffset = top + padding + overlayHeight - scrollY;\n\n    if (topEdgeOffset < 0) {\n      return -topEdgeOffset;\n    } else if (bottomEdgeOffset > containerHeight) {\n      return containerHeight - bottomEdgeOffset;\n    }\n\n    return 0;\n  }\n\n  function getLeftDelta(left, overlayWidth, container) {\n    if (!preventOverflow) {\n      return 0;\n    }\n    var containerDimensions = getContainerDimensions(container);\n    var scrollX = containerDimensions.scrollX,\n        containerWidth = containerDimensions.width;\n\n\n    var leftEdgeOffset = left - padding - scrollX;\n    var rightEdgeOffset = left + padding + overlayWidth - scrollX;\n\n    if (leftEdgeOffset < 0) {\n      return -leftEdgeOffset;\n    } else if (rightEdgeOffset > containerWidth) {\n      return containerWidth - rightEdgeOffset;\n    }\n\n    return 0;\n  }\n\n  function getPositionTop(container, overlayHeight, top) {\n    if (!preventOverflow) {\n      return top;\n    }\n\n    var _getContainerDimensio = getContainerDimensions(container),\n        scrollY = _getContainerDimensio.scrollY,\n        containerHeight = _getContainerDimensio.height;\n\n    // 判断 overlay 底部是否溢出，设置 top\n\n\n    if (overlayHeight + top > containerHeight + scrollY) {\n      return containerHeight - overlayHeight + scrollY;\n    }\n\n    // top 的最小值不能少于纵向滚动条 y 的值\n    return Math.max(scrollY, top);\n  }\n\n  function getPositionLeft(container, overlayWidth, left) {\n    if (!preventOverflow) {\n      return left;\n    }\n\n    var _getContainerDimensio2 = getContainerDimensions(container),\n        scrollX = _getContainerDimensio2.scrollX,\n        containerWidth = _getContainerDimensio2.width;\n\n    if (overlayWidth + left > containerWidth + scrollX) {\n      return containerWidth - overlayWidth + scrollX;\n    }\n\n    // left 的最小值不能少于横向滚动条 x 的值\n    return Math.max(scrollX, left);\n  }\n\n  return {\n    getPosition: function getPosition(target, container) {\n      var offset = container.tagName === 'BODY' ? (0, _domLib.getOffset)(target) : (0, _domLib.getPosition)(target, container);\n      return offset;\n    },\n    calcAutoPlacement: function calcAutoPlacement(targetOffset, container, overlay) {\n      var _getContainerDimensio3 = getContainerDimensions(container),\n          width = _getContainerDimensio3.width,\n          height = _getContainerDimensio3.height,\n          scrollX = _getContainerDimensio3.scrollX,\n          scrollY = _getContainerDimensio3.scrollY;\n\n      var left = targetOffset.left - scrollX - overlay.width;\n      var top = targetOffset.top - scrollY - overlay.height;\n      var right = width - targetOffset.left - targetOffset.width + scrollX - overlay.width;\n      var bottom = height - targetOffset.top - targetOffset.height + scrollY - overlay.height;\n\n      var horizontal = [{ key: 'left', value: left }, { key: 'right', value: right }];\n      var vertical = [{ key: 'top', value: top }, { key: 'bottom', value: bottom }];\n      var AV = 'autoVertical';\n      var AH = 'autoHorizontal';\n\n      var direction = void 0;\n      var align = void 0;\n\n      if (placement.indexOf(AV) !== -1) {\n        direction = (0, _maxBy2.default)(vertical, function (o) {\n          return o.value;\n        });\n        return placement === AV ? direction.key : '' + direction.key + placement.replace(AV, '');\n      } else if (placement.indexOf(AH) !== -1) {\n        direction = (0, _maxBy2.default)(horizontal, function (o) {\n          return o.value;\n        });\n        return placement === AH ? direction.key : '' + direction.key + placement.replace(AH, '');\n      }\n\n      /**\n       * Precedence Vertical\n       * [...vertical, ...horizontal]\n       */\n      direction = (0, _maxBy2.default)([].concat(vertical, horizontal), function (o) {\n        return o.value;\n      });\n\n      if (direction.key === 'left' || direction.key === 'right') {\n        align = (0, _minBy2.default)(vertical, function (o) {\n          return o.value;\n        });\n      } else {\n        align = (0, _minBy2.default)(horizontal, function (o) {\n          return o.value;\n        });\n      }\n\n      return '' + direction.key + AutoPlacement[align.key];\n    },\n\n    // 计算浮层的位置\n\n    calcOverlayPosition: function calcOverlayPosition(overlayNode, target, container) {\n      var childOffset = this.getPosition(target, container);\n\n      var _getOffset2 = (0, _domLib.getOffset)(overlayNode),\n          overlayHeight = _getOffset2.height,\n          overlayWidth = _getOffset2.width;\n\n      var top = childOffset.top,\n          left = childOffset.left;\n\n\n      var nextPlacement = placement;\n\n      if (placement && placement.indexOf('auto') >= 0) {\n        nextPlacement = this.calcAutoPlacement(childOffset, container, {\n          height: overlayHeight,\n          width: overlayWidth\n        });\n      }\n\n      var positionLeft = void 0;\n      var positionTop = void 0;\n      var arrowOffsetLeft = void 0;\n      var arrowOffsetTop = void 0;\n\n      if (nextPlacement === 'left' || nextPlacement === 'right') {\n        positionTop = childOffset.top + (childOffset.height - overlayHeight) / 2;\n\n        var topDelta = getTopDelta(positionTop, overlayHeight, container);\n\n        positionTop += topDelta;\n        arrowOffsetTop = 50 * (1 - 2 * topDelta / overlayHeight) + '%';\n        arrowOffsetLeft = undefined;\n      } else if (nextPlacement === 'top' || nextPlacement === 'bottom') {\n        positionLeft = left + (childOffset.width - overlayWidth) / 2;\n\n        var leftDelta = getLeftDelta(positionLeft, overlayWidth, container);\n        positionLeft += leftDelta;\n\n        arrowOffsetLeft = 50 * (1 - 2 * leftDelta / overlayWidth) + '%';\n        arrowOffsetTop = undefined;\n      }\n\n      if (nextPlacement === 'top' || nextPlacement === 'topStart' || nextPlacement === 'topEnd') {\n        positionTop = getPositionTop(container, overlayHeight, childOffset.top - overlayHeight);\n      }\n\n      if (nextPlacement === 'bottom' || nextPlacement === 'bottomStart' || nextPlacement === 'bottomEnd') {\n        positionTop = getPositionTop(container, overlayHeight, childOffset.top + childOffset.height);\n      }\n\n      if (nextPlacement === 'left' || nextPlacement === 'leftStart' || nextPlacement === 'leftEnd') {\n        positionLeft = getPositionLeft(container, overlayWidth, childOffset.left - overlayWidth);\n      }\n\n      if (nextPlacement === 'right' || nextPlacement === 'rightStart' || nextPlacement === 'rightEnd') {\n        positionLeft = getPositionLeft(container, overlayWidth, childOffset.left + childOffset.width);\n      }\n\n      if (document.dir === 'rtl' && (nextPlacement === 'left' || nextPlacement === 'leftStart' || nextPlacement === 'leftEnd' || nextPlacement === 'right' || nextPlacement === 'rightStart' || nextPlacement === 'rightEnd')) {\n        /**\n         * When laying out in rtl, if the width of the container\n         * is less than the width of the container scrolling,\n         * you need to recalculate the left value.\n         */\n        var _getContainerDimensio4 = getContainerDimensions(container),\n            containerWidth = _getContainerDimensio4.width;\n\n        if (container.scrollWidth > containerWidth) {\n          positionLeft = containerWidth + positionLeft - container.scrollWidth;\n        }\n      }\n\n      if (nextPlacement === 'topStart' || nextPlacement === 'bottomStart') {\n        if (document.dir === 'rtl') {\n          var nextLeft = left + (childOffset.width - overlayWidth);\n          positionLeft = nextLeft + getLeftDelta(nextLeft, overlayWidth, container);\n        } else {\n          positionLeft = left + getLeftDelta(left, overlayWidth, container);\n        }\n      }\n\n      if (nextPlacement === 'topEnd' || nextPlacement === 'bottomEnd') {\n        if (document.dir === 'rtl') {\n          positionLeft = left + getLeftDelta(left, overlayWidth, container);\n        } else {\n          var _nextLeft = left + (childOffset.width - overlayWidth);\n          positionLeft = _nextLeft + getLeftDelta(_nextLeft, overlayWidth, container);\n        }\n      }\n\n      if (nextPlacement === 'leftStart' || nextPlacement === 'rightStart') {\n        positionTop = top + getTopDelta(top, overlayHeight, container);\n      }\n\n      if (nextPlacement === 'leftEnd' || nextPlacement === 'rightEnd') {\n        var nextTop = top + (childOffset.height - overlayHeight);\n        positionTop = nextTop + getTopDelta(nextTop, overlayHeight, container);\n      }\n\n      return {\n        positionLeft: positionLeft,\n        positionTop: positionTop,\n        arrowOffsetLeft: arrowOffsetLeft,\n        arrowOffsetTop: arrowOffsetTop,\n        positionClassName: 'placement-' + (0, _kebabCase2.default)(nextPlacement)\n      };\n    }\n  };\n};"]},"metadata":{},"sourceType":"script"}