{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/src/components/loginform.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: 400,\n    margin: `${theme.spacing(0)} auto`\n  },\n  loginBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: 'center',\n    background: '#212121',\n    color: '#fff'\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n}));\n\nconst LoginForm = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const [helperText, setHelperText] = useState('');\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    if (username.trim() && password.trim()) {\n      setIsButtonDisabled(false);\n    } else {\n      setIsButtonDisabled(true);\n    }\n  }, [username, password]);\n\n  const handleLogin = () => {\n    if (username === 'abc@email.com' && password === 'password') {\n      setError(false);\n      setHelperText('Login Successfully');\n    } else {\n      setError(true);\n      setHelperText('Incorrect username or password');\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.keyCode === 13 || e.which === 13) {\n      isButtonDisabled || handleLogin();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.header,\n    title: \"Login App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: error,\n    fullWidth: true,\n    id: \"username\",\n    type: \"email\",\n    label: \"Username\",\n    placeholder: \"Username\",\n    margin: \"normal\",\n    onChange: e => setUsername(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: error,\n    fullWidth: true,\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    margin: \"normal\",\n    helperText: helperText,\n    onChange: e => setPassword(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"secondary\",\n    className: classes.loginBtn,\n    onClick: () => handleLogin(),\n    disabled: isButtonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/src/components/loginform.jsx"],"names":["React","useState","useEffect","TextField","createStyles","makeStyles","Theme","Card","CardContent","CardActions","Button","CardHeader","useStyles","theme","container","display","flexWrap","width","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","LoginForm","classes","username","setUsername","password","setPassword","isButtonDisabled","setIsButtonDisabled","helperText","setHelperText","error","setError","trim","handleLogin","handleKeyPress","e","keyCode","which","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      width: 400,\r\n      margin: `${theme.spacing(0)} auto`\r\n    },\r\n    loginBtn: {\r\n      marginTop: theme.spacing(2),\r\n      flexGrow: 1\r\n    },\r\n    header: {\r\n      textAlign: 'center',\r\n      background: '#212121',\r\n      color: '#fff'\r\n    },\r\n    card: {\r\n      marginTop: theme.spacing(10)\r\n    }\r\n\r\n  }),\r\n);\r\n\r\nconst LoginForm = () => {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\r\n  const [helperText, setHelperText] = useState('');\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (username.trim() && password.trim()) {\r\n      setIsButtonDisabled(false);\r\n    } else {\r\n      setIsButtonDisabled(true);\r\n    }\r\n  }, [username, password]);\r\n\r\n  const handleLogin = () => {\r\n    if (username === 'abc@email.com' && password === 'password') {\r\n      setError(false);\r\n      setHelperText('Login Successfully');\r\n    } else {\r\n      setError(true);\r\n      setHelperText('Incorrect username or password')\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e:any) => {\r\n    if (e.keyCode === 13 || e.which === 13) {\r\n      isButtonDisabled || handleLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Card className={classes.card}>\r\n          <CardHeader className={classes.header} title=\"Login App\" />\r\n          <CardContent>\r\n            <div>\r\n              <TextField\r\n                error={error}\r\n                fullWidth\r\n                id=\"username\"\r\n                type=\"email\"\r\n                label=\"Username\"\r\n                placeholder=\"Username\"\r\n                margin=\"normal\"\r\n                onChange={(e)=>setUsername(e.target.value)}\r\n                onKeyPress={(e)=>handleKeyPress(e)}\r\n              />\r\n              <TextField\r\n                error={error}\r\n                fullWidth\r\n                id=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                margin=\"normal\"\r\n                helperText={helperText}\r\n                onChange={(e)=>setPassword(e.target.value)}\r\n                onKeyPress={(e)=>handleKeyPress(e)}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              className={classes.loginBtn}\r\n              onClick={()=>handleLogin()}\r\n              disabled={isButtonDisabled}>\r\n              Login\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}