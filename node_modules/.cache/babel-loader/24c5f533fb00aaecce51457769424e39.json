{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nconst config = {\n  apiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\n  authDomain: \"khana-shana-2020.firebaseapp.com\",\n  databaseURL: \"https://khana-shana-2020.firebaseio.com\",\n  projectId: \"khana-shana-2020\",\n  storageBucket: \"khana-shana-2020.appspot.com\",\n  messagingSenderId: \"734527584801\",\n  appId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\n  measurementId: \"G-SC8N0VD5FC\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  async register(name, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    return this.auth.currentUser.updateProfile({\n      displayName: name\n    });\n  }\n\n  addQuote(quote) {\n    if (!this.auth.currentUser) {\n      return alert('Not authorized');\n    }\n\n    return this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).set({\n      quote\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  }\n\n  async getCurrentUserQuote() {\n    const quote = await this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).get();\n    return quote.get('quote');\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/src/components/fire.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","initializeApp","auth","db","firestore","login","email","password","signInWithEmailAndPassword","logout","signOut","register","name","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","addQuote","quote","alert","doc","uid","set","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getCurrentUserQuote","get"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,kCAFE;AAGdC,EAAAA,WAAW,EAAE,yCAHC;AAIdC,EAAAA,SAAS,EAAE,kBAJG;AAKdC,EAAAA,aAAa,EAAE,8BALD;AAMdC,EAAAA,iBAAiB,EAAE,cANL;AAOdC,EAAAA,KAAK,EAAE,2CAPO;AAQdC,EAAAA,aAAa,EAAE;AARD,CAAf;;AAWE,MAAMC,QAAN,CAAe;AAChBC,EAAAA,WAAW,GAAG;AACbX,IAAAA,GAAG,CAACY,aAAJ,CAAkBX,MAAlB;AACA,SAAKY,IAAL,GAAYb,GAAG,CAACa,IAAJ,EAAZ;AACA,SAAKC,EAAL,GAAUd,GAAG,CAACe,SAAJ,EAAV;AACA;;AAEDC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACtB,WAAO,KAAKL,IAAL,CAAUM,0BAAV,CAAqCF,KAArC,EAA4CC,QAA5C,CAAP;AACA;;AAEDE,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKP,IAAL,CAAUQ,OAAV,EAAP;AACA;;AAED,QAAMC,QAAN,CAAeC,IAAf,EAAqBN,KAArB,EAA4BC,QAA5B,EAAsC;AACrC,UAAM,KAAKL,IAAL,CAAUW,8BAAV,CAAyCP,KAAzC,EAAgDC,QAAhD,CAAN;AACA,WAAO,KAAKL,IAAL,CAAUY,WAAV,CAAsBC,aAAtB,CAAoC;AAC1CC,MAAAA,WAAW,EAAEJ;AAD6B,KAApC,CAAP;AAGA;;AAEDK,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACf,QAAG,CAAC,KAAKhB,IAAL,CAAUY,WAAd,EAA2B;AAC1B,aAAOK,KAAK,CAAC,gBAAD,CAAZ;AACA;;AAED,WAAO,KAAKhB,EAAL,CAAQiB,GAAR,CAAa,wBAAuB,KAAKlB,IAAL,CAAUY,WAAV,CAAsBO,GAAI,EAA9D,EAAiEC,GAAjE,CAAqE;AAC3EJ,MAAAA;AAD2E,KAArE,CAAP;AAGA;;AAEDK,EAAAA,aAAa,GAAG;AACf,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC7B,WAAKvB,IAAL,CAAUwB,kBAAV,CAA6BD,OAA7B;AACA,KAFM,CAAP;AAGA;;AAEDE,EAAAA,kBAAkB,GAAG;AACpB,WAAO,KAAKzB,IAAL,CAAUY,WAAV,IAAyB,KAAKZ,IAAL,CAAUY,WAAV,CAAsBE,WAAtD;AACA;;AAED,QAAMY,mBAAN,GAA4B;AAC3B,UAAMV,KAAK,GAAG,MAAM,KAAKf,EAAL,CAAQiB,GAAR,CAAa,wBAAuB,KAAKlB,IAAL,CAAUY,WAAV,CAAsBO,GAAI,EAA9D,EAAiEQ,GAAjE,EAApB;AACA,WAAOX,KAAK,CAACW,GAAN,CAAU,OAAV,CAAP;AACA;;AA7Ce;;AAgDjB,eAAe,IAAI9B,QAAJ,EAAf","sourcesContent":["import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firebase-firestore';\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\r\n\tauthDomain: \"khana-shana-2020.firebaseapp.com\",\r\n\tdatabaseURL: \"https://khana-shana-2020.firebaseio.com\",\r\n\tprojectId: \"khana-shana-2020\",\r\n\tstorageBucket: \"khana-shana-2020.appspot.com\",\r\n\tmessagingSenderId: \"734527584801\",\r\n\tappId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\r\n\tmeasurementId: \"G-SC8N0VD5FC\"\r\n  };\r\n\r\n  class Firebase {\r\n\tconstructor() {\r\n\t\tapp.initializeApp(config)\r\n\t\tthis.auth = app.auth()\r\n\t\tthis.db = app.firestore()\r\n\t}\r\n\r\n\tlogin(email, password) {\r\n\t\treturn this.auth.signInWithEmailAndPassword(email, password)\r\n\t}\r\n\r\n\tlogout() {\r\n\t\treturn this.auth.signOut()\r\n\t}\r\n\r\n\tasync register(name, email, password) {\r\n\t\tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n\t\treturn this.auth.currentUser.updateProfile({\r\n\t\t\tdisplayName: name\r\n\t\t})\r\n\t}\r\n\r\n\taddQuote(quote) {\r\n\t\tif(!this.auth.currentUser) {\r\n\t\t\treturn alert('Not authorized')\r\n\t\t}\r\n\r\n\t\treturn this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).set({\r\n\t\t\tquote\r\n\t\t})\r\n\t}\r\n\r\n\tisInitialized() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.auth.onAuthStateChanged(resolve)\r\n\t\t})\r\n\t}\r\n\r\n\tgetCurrentUsername() {\r\n\t\treturn this.auth.currentUser && this.auth.currentUser.displayName\r\n\t}\r\n\r\n\tasync getCurrentUserQuote() {\r\n\t\tconst quote = await this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).get()\r\n\t\treturn quote.get('quote')\r\n\t}\r\n}\r\n\r\nexport default new Firebase();"]},"metadata":{},"sourceType":"module"}