{"ast":null,"code":"import { ADD_TO_CART, REMOVE_ITEM, DEC_CART, INC_CART, FETCH_ITEMS } from '../actions/cart-action-types';\nimport img1 from '../images/4.jpg';\nimport img2 from '../images/8.jpg';\nimport img3 from '../images/9.jpg';\nimport img4 from '../images/5.png';\nimport img5 from '../images/1.jpg';\nimport img6 from '../images/7.jpg';\nconst initState = {\n  items: [],\n  cart: [],\n  total: 0\n};\n\nconst cartReducer = (state = initState, action) => {\n  //INSIDE HOME COMPONENT\n  if (action.type === ADD_TO_CART) {\n    let fooditem = state.items.find(item => item.id === action.payload);\n    console.log(action.payload);\n    console.log(fooditem); //check if the action.payload exists in the cart\n\n    let existed_item = state.cart.find(item => action.payload === item.id);\n\n    if (existed_item) {\n      fooditem.quantity += 1;\n      return { ...state,\n        total: state.total + fooditem.price\n      };\n    } else {\n      fooditem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + fooditem.price;\n      return { ...state,\n        cart: [...state.cart, fooditem],\n        total: newTotal\n      };\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.cart.find(item => action.payload === item.id);\n    let new_items = state.cart.filter(item => action.payload !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n    console.log(itemToRemove);\n    return { ...state,\n      cart: new_items,\n      total: newTotal\n    };\n  } //INSIDE CART COMPONENT\n\n\n  if (action.type === INC_CART) {\n    let fooditem = state.items.find(item => item.id === action.payload);\n    fooditem.quantity += 1;\n    let newTotal = state.total + fooditem.price;\n    return { ...state,\n      total: newTotal\n    };\n  }\n\n  if (action.type === DEC_CART) {\n    let fooditem = state.items.find(item => item.id === action.payload); //if the qt == 0 then it should be removed\n\n    if (fooditem.quantity === 1) {\n      let new_items = state.cart.filter(item => item.id !== action.payload);\n      let newTotal = state.total - fooditem.price;\n      return { ...state,\n        cart: new_items,\n        total: newTotal\n      };\n    } else {\n      fooditem.quantity -= 1;\n      let newTotal = state.total - fooditem.price;\n      return { ...state,\n        total: newTotal\n      };\n    }\n  }\n\n  if (action.type === FETCH_ITEMS) {\n    return { ...state,\n      items: action.payload\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/se/KhanaShana-Client/src/components/order/reducers/reducer.jsx"],"names":["ADD_TO_CART","REMOVE_ITEM","DEC_CART","INC_CART","FETCH_ITEMS","img1","img2","img3","img4","img5","img6","initState","items","cart","total","cartReducer","state","action","type","fooditem","find","item","id","payload","console","log","existed_item","quantity","price","newTotal","itemToRemove","new_items","filter"],"mappings":"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","sourcesContent":["import { ADD_TO_CART,REMOVE_ITEM,DEC_CART,INC_CART, FETCH_ITEMS } from '../actions/cart-action-types';\r\nimport img1 from '../images/4.jpg'\r\nimport img2 from '../images/8.jpg'\r\nimport img3 from '../images/9.jpg'\r\nimport img4 from '../images/5.png'\r\nimport img5 from '../images/1.jpg'\r\nimport img6 from '../images/7.jpg'\r\n\r\n\r\n\r\nconst initState = {\r\n    items: [],\r\n    cart:[],\r\n    total: 0\r\n\r\n}\r\n\r\nconst cartReducer= (state = initState,action)=>{\r\n   \r\n    //INSIDE HOME COMPONENT\r\n    if(action.type === ADD_TO_CART){\r\n          let fooditem = state.items.find(item=> item.id === action.payload)\r\n          console.log(action.payload)\r\n          console.log(fooditem);\r\n          //check if the action.payload exists in the cart\r\n         let existed_item= state.cart.find(item=> action.payload === item.id)\r\n         if(existed_item)\r\n         {\r\n            fooditem.quantity += 1 \r\n             return{\r\n                ...state,\r\n                 total: state.total + fooditem.price \r\n                  }\r\n        }\r\n         else{\r\n            fooditem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + fooditem.price \r\n            \r\n            return{\r\n                ...state,\r\n                cart: [...state.cart, fooditem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.cart.find(item=> action.payload === item.id)\r\n        let new_items = state.cart.filter(item=> action.payload !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n        console.log(itemToRemove)\r\n        return{\r\n            ...state,\r\n            cart: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if(action.type=== INC_CART){\r\n        let fooditem = state.items.find(item=> item.id === action.payload)\r\n          fooditem.quantity += 1 \r\n          let newTotal = state.total + fooditem.price\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n    }\r\n    if(action.type=== DEC_CART){  \r\n        let fooditem = state.items.find(item=> item.id === action.payload) \r\n        //if the qt == 0 then it should be removed\r\n        if(fooditem.quantity === 1){\r\n            let new_items = state.cart.filter(item=>item.id !== action.payload)\r\n            let newTotal = state.total - fooditem.price\r\n            return{\r\n                ...state,\r\n                cart: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            fooditem.quantity -= 1\r\n            let newTotal = state.total - fooditem.price\r\n            return{\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n    if(action.type=== FETCH_ITEMS)\r\n    {\r\n        return{\r\n            ...state,\r\n            items: action.payload\r\n        }\r\n    }\r\n    \r\n  else{\r\n    return state\r\n    }\r\n    \r\n}\r\n\r\nexport default cartReducer\r\n"]},"metadata":{},"sourceType":"module"}