{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\n  authDomain: \"khana-shana-2020.firebaseapp.com\",\n  databaseURL: \"https://khana-shana-2020.firebaseio.com\",\n  projectId: \"khana-shana-2020\",\n  storageBucket: \"khana-shana-2020.appspot.com\",\n  messagingSenderId: \"734527584801\",\n  appId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\n  measurementId: \"G-SC8N0VD5FC\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n\n  login(email, password) {\n    return new Promise((resolve, reject) => {\n      app.auth();\n      this.signInWithEmailAndPassword(email, password).then(() => resolve()).catch(error => reject(error));\n    });\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  async register(name, email, password) {\n    console.log(email, password);\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    return this.auth.currentUser.updateProfile({\n      displayName: name\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  } // async register(name,email,password){\n  // \tawait this.auth.createUserWithEmailAndPassword(email,password)\n  // \treturn this.auth.currentUser.updateProfile({\n  // \t\tdisplayName: name\n  // \t})\n  // }\n\n\n}\n\n;\nexport default new Firebase();","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/src/components/fire.js"],"names":["app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","initializeApp","auth","db","firestore","login","email","password","Promise","resolve","reject","signInWithEmailAndPassword","then","catch","error","logout","signOut","isInitialized","onAuthStateChanged","register","name","console","log","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","getCurrentUsername"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP;AAEA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,MAAM,EAAE,yCADc;AAEtBC,EAAAA,UAAU,EAAE,kCAFU;AAGtBC,EAAAA,WAAW,EAAE,yCAHS;AAItBC,EAAAA,SAAS,EAAE,kBAJW;AAKtBC,EAAAA,aAAa,EAAE,8BALO;AAMtBC,EAAAA,iBAAiB,EAAE,cANG;AAOtBC,EAAAA,KAAK,EAAE,2CAPe;AAQtBC,EAAAA,aAAa,EAAE;AARO,CAAvB;;AAWA,MAAMC,QAAN,CAAc;AACbC,EAAAA,WAAW,GAAE;AACZX,IAAAA,GAAG,CAACY,aAAJ,CAAkBX,cAAlB;AACA,SAAKY,IAAL,GAAYb,GAAG,CAACa,IAAJ,EAAZ;AACA,SAAKC,EAAL,GAAUd,GAAG,CAACe,SAAJ,EAAV;AACA;;AAEDC,EAAAA,KAAK,CAACC,KAAD,EAAOC,QAAP,EAAgB;AACpB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEvCrB,MAAAA,GAAG,CAACa,IAAJ;AACA,WACGS,0BADH,CAC8BL,KAD9B,EACqCC,QADrC,EAEGK,IAFH,CAEQ,MAAMH,OAAO,EAFrB,EAGGI,KAHH,CAGSC,KAAK,IAAIJ,MAAM,CAACI,KAAD,CAHxB;AAIE,KAPI,CAAP;AAQA;;AAEDC,EAAAA,MAAM,GAAE;AACP,WAAO,KAAKb,IAAL,CAAUc,OAAV,EAAP;AACA;;AAEDC,EAAAA,aAAa,GAAG;AACf,WAAO,IAAIT,OAAJ,CAAYC,OAAO,IAAI;AAC7B,WAAKP,IAAL,CAAUgB,kBAAV,CAA6BT,OAA7B;AACA,KAFM,CAAP;AAGA;;AAED,QAAMU,QAAN,CAAeC,IAAf,EAAqBd,KAArB,EAA4BC,QAA5B,EAAsC;AACrCc,IAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ,EAAkBC,QAAlB;AACA,UAAM,KAAKL,IAAL,CAAUqB,8BAAV,CAAyCjB,KAAzC,EAAgDC,QAAhD,CAAN;AACA,WAAO,KAAKL,IAAL,CAAUsB,WAAV,CAAsBC,aAAtB,CAAoC;AAC1CC,MAAAA,WAAW,EAAEN;AAD6B,KAApC,CAAP;AAGA;;AAGDO,EAAAA,kBAAkB,GAAG;AACpB,WAAO,KAAKzB,IAAL,CAAUsB,WAAV,IAAyB,KAAKtB,IAAL,CAAUsB,WAAV,CAAsBE,WAAtD;AACA,GAvCY,CAyCb;AACA;AACA;AACA;AAEA;AACA;;;AA/Ca;;AAiDb;AAGD,eAAe,IAAI3B,QAAJ,EAAf","sourcesContent":["import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firebase-firestore';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\r\n\tauthDomain: \"khana-shana-2020.firebaseapp.com\",\r\n\tdatabaseURL: \"https://khana-shana-2020.firebaseio.com\",\r\n\tprojectId: \"khana-shana-2020\",\r\n\tstorageBucket: \"khana-shana-2020.appspot.com\",\r\n\tmessagingSenderId: \"734527584801\",\r\n\tappId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\r\n\tmeasurementId: \"G-SC8N0VD5FC\"\r\n  };\r\n\r\nclass Firebase{\r\n\tconstructor(){\r\n\t\tapp.initializeApp(firebaseConfig);\r\n\t\tthis.auth = app.auth();\r\n\t\tthis.db = app.firestore();\r\n\t}\r\n\r\n\tlogin(email,password){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\r\n\t\t\tapp.auth()\r\n\t\t\tthis\r\n\t\t\t  .signInWithEmailAndPassword(email, password)\r\n\t\t\t  .then(() => resolve())\r\n\t\t\t  .catch(error => reject(error));\r\n\t\t  });\r\n\t}\r\n\r\n\tlogout(){\r\n\t\treturn this.auth.signOut();\r\n\t}\r\n\r\n\tisInitialized() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.auth.onAuthStateChanged(resolve)\r\n\t\t})\r\n\t}\r\n\r\n\tasync register(name, email, password) {\r\n\t\tconsole.log(email,password);\r\n\t\tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n\t\treturn this.auth.currentUser.updateProfile({\r\n\t\t\tdisplayName: name\r\n\t\t})\r\n\t}\r\n\r\n\t\r\n\tgetCurrentUsername() {\r\n\t\treturn this.auth.currentUser && this.auth.currentUser.displayName\r\n\t}\r\n\r\n\t// async register(name,email,password){\r\n\t// \tawait this.auth.createUserWithEmailAndPassword(email,password)\r\n\t// \treturn this.auth.currentUser.updateProfile({\r\n\t// \t\tdisplayName: name\r\n\r\n\t// \t})\r\n\t// }\r\n\t\r\n};\r\n\r\n\r\nexport default new Firebase();"]},"metadata":{},"sourceType":"module"}