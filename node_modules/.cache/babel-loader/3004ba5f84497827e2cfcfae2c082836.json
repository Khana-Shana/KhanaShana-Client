{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\n  authDomain: \"khana-shana-2020.firebaseapp.com\",\n  databaseURL: \"https://khana-shana-2020.firebaseio.com\",\n  projectId: \"khana-shana-2020\",\n  storageBucket: \"khana-shana-2020.appspot.com\",\n  messagingSenderId: \"734527584801\",\n  appId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\n  measurementId: \"G-SC8N0VD5FC\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // class Firebase{\n// \tconstructor(){\n// \t\tapp.initializeApp(firebaseConfig);\n// \t\tthis.auth = app.auth();\n// \t\tthis.db = app.firestore();\n// \t}\n// \tlogin(email,password){\n// \t\treturn new Promise((resolve, reject) => {\n// \t\t\t  app.auth()\n// \t\t\t  .signInWithEmailAndPassword(email, password)\n// \t\t\t  .then(() => resolve())\n// \t\t\t  .catch(error => reject(error));\n// \t\t  });\n// \t}\n// \tlogout(){\n// \t\treturn this.auth.signOut();\n// \t}\n// \tisInitialized() {\n// \t\treturn new Promise(resolve => {\n// \t\t\tthis.auth.onAuthStateChanged(resolve)\n// \t\t})\n// \t}\n// \tasync register(name, email, password) {\n// \t\tconsole.log(email,password);\n// \t\tawait this.auth.createUserWithEmailAndPassword(email, password)\n// \t\treturn this.auth.currentUser.updateProfile({\n// \t\t\tdisplayName: name\n// \t\t})\n// \t}\n// \t// getCurrentUsername() {\n// \t// \treturn this.auth.currentUser && this.auth.currentUser.displayName\n// \t// }\n// \t// async register(name,email,password){\n// \t// \tawait this.auth.createUserWithEmailAndPassword(email,password)\n// \t// \treturn this.auth.currentUser.updateProfile({\n// \t// \t\tdisplayName: name\n// \t// \t})\n// \t// }\n// };\n// export default new Firebase();","map":{"version":3,"sources":["/mnt/c/Users/Dell/Desktop/KhanaWeb/khanaweb/src/components/fire.js"],"names":["app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","firestore"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP;AAEA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,MAAM,EAAE,yCADc;AAEtBC,EAAAA,UAAU,EAAE,kCAFU;AAGtBC,EAAAA,WAAW,EAAE,yCAHS;AAItBC,EAAAA,SAAS,EAAE,kBAJW;AAKtBC,EAAAA,aAAa,EAAE,8BALO;AAMtBC,EAAAA,iBAAiB,EAAE,cANG;AAOtBC,EAAAA,KAAK,EAAE,2CAPe;AAQtBC,EAAAA,aAAa,EAAE;AARO,CAAvB;AAWEC,QAAQ,CAACC,aAAT,CAAuBV,cAAvB;AACA,OAAO,MAAMW,IAAI,GAAGF,QAAQ,CAACE,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGH,QAAQ,CAACG,SAAT,EAAlB,C,CAET;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA","sourcesContent":["import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firebase-firestore';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyCoI_Hy_IJsXqDp_CtkdD1K81sqvTnzx7E\",\r\n\tauthDomain: \"khana-shana-2020.firebaseapp.com\",\r\n\tdatabaseURL: \"https://khana-shana-2020.firebaseio.com\",\r\n\tprojectId: \"khana-shana-2020\",\r\n\tstorageBucket: \"khana-shana-2020.appspot.com\",\r\n\tmessagingSenderId: \"734527584801\",\r\n\tappId: \"1:734527584801:web:f6cda3a79788e9af12c160\",\r\n\tmeasurementId: \"G-SC8N0VD5FC\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n// class Firebase{\r\n// \tconstructor(){\r\n// \t\tapp.initializeApp(firebaseConfig);\r\n// \t\tthis.auth = app.auth();\r\n// \t\tthis.db = app.firestore();\r\n// \t}\r\n\r\n// \tlogin(email,password){\r\n// \t\treturn new Promise((resolve, reject) => {\r\n// \t\t\t  app.auth()\r\n// \t\t\t  .signInWithEmailAndPassword(email, password)\r\n// \t\t\t  .then(() => resolve())\r\n// \t\t\t  .catch(error => reject(error));\r\n// \t\t  });\r\n// \t}\r\n\r\n// \tlogout(){\r\n// \t\treturn this.auth.signOut();\r\n// \t}\r\n\r\n// \tisInitialized() {\r\n// \t\treturn new Promise(resolve => {\r\n// \t\t\tthis.auth.onAuthStateChanged(resolve)\r\n// \t\t})\r\n// \t}\r\n\r\n// \tasync register(name, email, password) {\r\n// \t\tconsole.log(email,password);\r\n// \t\tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n// \t\treturn this.auth.currentUser.updateProfile({\r\n// \t\t\tdisplayName: name\r\n// \t\t})\r\n// \t}\r\n\r\n\t\r\n// \t// getCurrentUsername() {\r\n// \t// \treturn this.auth.currentUser && this.auth.currentUser.displayName\r\n// \t// }\r\n\r\n// \t// async register(name,email,password){\r\n// \t// \tawait this.auth.createUserWithEmailAndPassword(email,password)\r\n// \t// \treturn this.auth.currentUser.updateProfile({\r\n// \t// \t\tdisplayName: name\r\n\r\n// \t// \t})\r\n// \t// }\r\n\t\r\n// };\r\n\r\n\r\n// export default new Firebase();"]},"metadata":{},"sourceType":"module"}