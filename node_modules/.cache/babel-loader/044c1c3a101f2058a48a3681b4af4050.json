{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nvar SPACINGS = {\n  small: -16,\n  medium: null\n};\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the avatar elements. */\n    avatar: {\n      border: \"2px solid \".concat(theme.palette.background.default),\n      marginLeft: -8\n    }\n  };\n};\nvar AvatarGroup = React.forwardRef(function AvatarGroup(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 'medium' : _props$spacing,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 5 : _props$max,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"spacing\", \"max\"]);\n\n  var children = React.Children.toArray(childrenProp).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  });\n  var extraAvatars = children.length > max ? children.length - max : 0;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children.slice(0, children.length - extraAvatars).map(function (child, index) {\n    return React.cloneElement(child, {\n      className: clsx(child.props.className, classes.avatar),\n      style: _extends({\n        zIndex: children.length - index,\n        marginLeft: spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing\n      }, child.props.style)\n    });\n  }), extraAvatars ? /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    style: {\n      zIndex: 0,\n      marginLeft: spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing\n    }\n  }, \"+\", extraAvatars) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Spacing between avatars.\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatarGroup'\n})(AvatarGroup);","map":{"version":3,"sources":["/home/moniex/Desktop/Final SE Project/KhanaShana-Client/node_modules/@material-ui/lab/esm/AvatarGroup/AvatarGroup.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","isFragment","clsx","withStyles","Avatar","SPACINGS","small","medium","styles","theme","root","display","avatar","border","concat","palette","background","default","marginLeft","AvatarGroup","forwardRef","props","ref","childrenProp","children","classes","className","_props$spacing","spacing","_props$max","max","other","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","extraAvatars","length","createElement","slice","map","index","cloneElement","style","zIndex","undefined","propTypes","node","object","string","number","oneOfType","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nvar SPACINGS = {\n  small: -16,\n  medium: null\n};\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the avatar elements. */\n    avatar: {\n      border: \"2px solid \".concat(theme.palette.background.default),\n      marginLeft: -8\n    }\n  };\n};\nvar AvatarGroup = React.forwardRef(function AvatarGroup(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 'medium' : _props$spacing,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 5 : _props$max,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"spacing\", \"max\"]);\n\n  var children = React.Children.toArray(childrenProp).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  });\n  var extraAvatars = children.length > max ? children.length - max : 0;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children.slice(0, children.length - extraAvatars).map(function (child, index) {\n    return React.cloneElement(child, {\n      className: clsx(child.props.className, classes.avatar),\n      style: _extends({\n        zIndex: children.length - index,\n        marginLeft: spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing\n      }, child.props.style)\n    });\n  }), extraAvatars ? /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    style: {\n      zIndex: 0,\n      marginLeft: spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing\n    }\n  }, \"+\", extraAvatars) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Spacing between avatars.\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatarGroup'\n})(AvatarGroup);"]},"metadata":{},"sourceType":"module"}