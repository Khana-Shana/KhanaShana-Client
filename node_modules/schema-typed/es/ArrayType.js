"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _Type2 = _interopRequireDefault(require("./Type"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

var ArrayType = /*#__PURE__*/function (_Type) {
  _inheritsLoose(ArrayType, _Type);

  ArrayType.from = function from(n) {
    return n;
  };

  function ArrayType() {
    var _this;

    var errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Please enter a valid array';
    _this = _Type.call(this, 'array') || this;

    _Type.prototype.pushRule.call(_assertThisInitialized(_this), function (v) {
      return Array.isArray(v);
    }, errorMessage);

    return _this;
  }

  var _proto = ArrayType.prototype;

  _proto.rangeLength = function rangeLength(minLength, maxLength, errorMessage) {
    _Type.prototype.pushRule.call(this, function (value) {
      return value.length >= minLength && value.length <= maxLength;
    }, errorMessage);

    return this;
  };

  _proto.minLength = function minLength(_minLength, errorMessage) {
    _Type.prototype.pushRule.call(this, function (value) {
      return value.length >= _minLength;
    }, errorMessage);

    return this;
  };

  _proto.maxLength = function maxLength(_maxLength, errorMessage) {
    _Type.prototype.pushRule.call(this, function (value) {
      return value.length <= _maxLength;
    }, errorMessage);

    return this;
  };

  _proto.unrepeatable = function unrepeatable(errorMessage) {
    _Type.prototype.pushRule.call(this, function (items) {
      var hash = {};
      /* eslint-disable */

      for (var i in items) {
        if (hash[items[i]]) {
          return false;
        }

        hash[items[i]] = true;
      }

      return true;
    }, errorMessage);

    return this;
  }
  /**
   * @example
   * ArrayType('这是一个数组').of(
   *      StringType().isOneOf(['数码','体育','游戏','旅途','其他'],
   *      '只能是选择中的值'
   * )
   */
  ;

  _proto.of = function of(type, errorMessage) {
    _Type.prototype.pushRule.call(this, function (items) {
      var valids = items.map(function (value) {
        return type.check(value);
      });
      var errors = valids.filter(function (item) {
        return item.hasError;
      }) || [];

      if (errors.length) {
        return errors[0];
      }

      return errors.length === 0;
    }, errorMessage);

    return this;
  };

  return ArrayType;
}(_Type2["default"]);

var _default = function _default(errorMessage) {
  return new ArrayType(errorMessage);
};

exports["default"] = _default;